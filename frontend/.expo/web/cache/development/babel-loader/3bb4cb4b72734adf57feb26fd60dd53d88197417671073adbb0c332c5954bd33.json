{"ast":null,"code":"import _asyncToGenerator from \"@babel/runtime/helpers/asyncToGenerator\";\nimport _slicedToArray from \"@babel/runtime/helpers/slicedToArray\";\nimport React, { useState } from 'react';\nimport View from \"react-native-web/dist/exports/View\";\nimport Text from \"react-native-web/dist/exports/Text\";\nimport StyleSheet from \"react-native-web/dist/exports/StyleSheet\";\nimport ScrollView from \"react-native-web/dist/exports/ScrollView\";\nimport TouchableOpacity from \"react-native-web/dist/exports/TouchableOpacity\";\nimport ActivityIndicator from \"react-native-web/dist/exports/ActivityIndicator\";\nimport Alert from \"react-native-web/dist/exports/Alert\";\nimport RefreshControl from \"react-native-web/dist/exports/RefreshControl\";\nimport { useFocusEffect } from '@react-navigation/native';\nimport { LineChart } from 'react-native-chart-kit';\nimport Dimensions from \"react-native-web/dist/exports/Dimensions\";\nimport { Ionicons } from '@expo/vector-icons';\nimport { jsx as _jsx, jsxs as _jsxs } from \"react/jsx-runtime\";\nexport default function DashboardScreen(_ref) {\n  var navigation = _ref.navigation;\n  var _useState = useState({\n      vendas_mes: 0,\n      total_produtos: 0,\n      lucro_mes: 0,\n      vendas_pendentes: 0,\n      vendas_historico: [],\n      lucro_historico: []\n    }),\n    _useState2 = _slicedToArray(_useState, 2),\n    data = _useState2[0],\n    setData = _useState2[1];\n  var _useState3 = useState(true),\n    _useState4 = _slicedToArray(_useState3, 2),\n    loading = _useState4[0],\n    setLoading = _useState4[1];\n  var _useState5 = useState(false),\n    _useState6 = _slicedToArray(_useState5, 2),\n    refreshing = _useState6[0],\n    setRefreshing = _useState6[1];\n  var loadDashboardData = function () {\n    var _ref2 = _asyncToGenerator(function* () {\n      var showLoading = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : true;\n      try {\n        if (showLoading) setLoading(true);\n        console.log('📊 Carregando dados do dashboard...');\n        var response = yield fetch('http://localhost:3000/api/dashboard/summary');\n        if (!response.ok) throw new Error(\"HTTP \" + response.status + \": \" + response.statusText);\n        var result = yield response.json();\n        var vendasHistorico = result.vendas_historico || [1000, 1200, 900, 1500, 1300, 1600, 1800, 1700, 2000, 1900, 2100, 2300];\n        var lucroHistorico = result.lucro_historico || [200, 250, 180, 300, 240, 320, 350, 330, 400, 370, 420, 450];\n        setData({\n          vendas_mes: result.vendasMes || 0,\n          total_produtos: result.produtos || 0,\n          lucro_mes: result.lucroMes || 0,\n          vendas_pendentes: result.pendentes || 0,\n          vendas_historico: vendasHistorico,\n          lucro_historico: lucroHistorico\n        });\n        console.log('✅ Dashboard atualizado com sucesso');\n      } catch (error) {\n        console.error('❌ Erro no dashboard:', error);\n        setData({\n          vendas_mes: 0,\n          total_produtos: 0,\n          lucro_mes: 0,\n          vendas_pendentes: 0,\n          vendas_historico: [],\n          lucro_historico: []\n        });\n        Alert.alert('Erro de Conexão', 'Não foi possível carregar os dados do dashboard. Verifique se o backend está rodando.\\n\\nErro: ' + error.message, [{\n          text: 'OK'\n        }]);\n      } finally {\n        if (showLoading) setLoading(false);\n        setRefreshing(false);\n      }\n    });\n    return function loadDashboardData() {\n      return _ref2.apply(this, arguments);\n    };\n  }();\n  useFocusEffect(React.useCallback(function () {\n    loadDashboardData();\n  }, []));\n  var onRefresh = function onRefresh() {\n    setRefreshing(true);\n    loadDashboardData(false);\n  };\n  var formatCurrency = function formatCurrency(value) {\n    return new Intl.NumberFormat('pt-BR', {\n      style: 'currency',\n      currency: 'BRL'\n    }).format(value);\n  };\n  if (loading) {\n    return _jsxs(View, {\n      style: styles.loadingContainer,\n      children: [_jsx(ActivityIndicator, {\n        size: \"large\",\n        color: \"#2196F3\"\n      }), _jsx(Text, {\n        style: styles.loadingText,\n        children: \"Carregando dashboard...\"\n      })]\n    });\n  }\n  return _jsxs(ScrollView, {\n    style: styles.container,\n    refreshControl: _jsx(RefreshControl, {\n      refreshing: refreshing,\n      onRefresh: onRefresh\n    }),\n    children: [_jsxs(View, {\n      style: styles.header,\n      children: [_jsx(Text, {\n        style: styles.title,\n        children: \"GEV App\"\n      }), _jsx(Text, {\n        style: styles.subtitle,\n        children: \"Gest\\xE3o Empresarial de Vendas\"\n      }), _jsx(TouchableOpacity, {\n        style: styles.refreshButton,\n        onPress: function onPress() {\n          return loadDashboardData();\n        },\n        children: loading ? _jsx(ActivityIndicator, {\n          color: \"white\"\n        }) : _jsx(Ionicons, {\n          name: \"refresh\",\n          size: 24,\n          color: \"white\"\n        })\n      })]\n    }), _jsxs(View, {\n      style: styles.cardsContainer,\n      children: [_jsxs(View, {\n        style: styles.row,\n        children: [_jsxs(View, {\n          style: [styles.card, styles.cardPrimary],\n          children: [_jsx(Text, {\n            style: styles.cardValue,\n            children: formatCurrency(data.vendas_mes)\n          }), _jsx(Text, {\n            style: styles.cardLabel,\n            children: \"Vendas do M\\xEAs\"\n          })]\n        }), _jsxs(View, {\n          style: [styles.card, styles.cardSuccess],\n          children: [_jsx(Text, {\n            style: styles.cardValue,\n            children: formatCurrency(data.lucro_mes)\n          }), _jsx(Text, {\n            style: styles.cardLabel,\n            children: \"Lucro do M\\xEAs\"\n          })]\n        })]\n      }), _jsxs(View, {\n        style: styles.row,\n        children: [_jsxs(View, {\n          style: [styles.card, styles.cardInfo],\n          children: [_jsx(Text, {\n            style: styles.cardValue,\n            children: data.total_produtos\n          }), _jsx(Text, {\n            style: styles.cardLabel,\n            children: \"Produtos Cadastrados\"\n          })]\n        }), _jsxs(View, {\n          style: [styles.card, styles.cardWarning],\n          children: [_jsx(Text, {\n            style: styles.cardValue,\n            children: data.vendas_pendentes\n          }), _jsx(Text, {\n            style: styles.cardLabel,\n            children: \"Vendas Pendentes\"\n          })]\n        })]\n      })]\n    }), _jsxs(View, {\n      style: styles.chartContainer,\n      children: [_jsx(Text, {\n        style: styles.chartTitle,\n        children: \"Vendas vs Lucro (\\xDAltimos 12 meses)\"\n      }), _jsx(LineChart, {\n        data: {\n          labels: ['Jan', 'Fev', 'Mar', 'Abr', 'Mai', 'Jun', 'Jul', 'Ago', 'Set', 'Out', 'Nov', 'Dez'],\n          datasets: [{\n            data: data.vendas_historico || [],\n            color: function color() {\n              return '#2196F3';\n            },\n            strokeWidth: 2,\n            label: 'Vendas'\n          }, {\n            data: data.lucro_historico || [],\n            color: function color() {\n              return '#4CAF50';\n            },\n            strokeWidth: 2,\n            label: 'Lucro'\n          }],\n          legend: ['Vendas', 'Lucro']\n        },\n        width: Dimensions.get('window').width - 40,\n        height: 220,\n        chartConfig: {\n          backgroundGradientFrom: '#f5f5f5',\n          backgroundGradientTo: '#f5f5f5',\n          decimalPlaces: 2,\n          color: function color() {\n            var opacity = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : 1;\n            return \"rgba(33, 150, 243, \" + opacity + \")\";\n          },\n          labelColor: function labelColor() {\n            var opacity = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : 1;\n            return \"rgba(0,0,0, \" + opacity + \")\";\n          },\n          style: {\n            borderRadius: 16\n          },\n          propsForDots: {\n            r: '4',\n            strokeWidth: '2',\n            stroke: '#2196F3'\n          }\n        },\n        style: {\n          marginVertical: 8,\n          borderRadius: 16\n        }\n      })]\n    }), _jsxs(View, {\n      style: styles.menuContainer,\n      children: [_jsx(Text, {\n        style: styles.menuTitle,\n        children: \"Menu Principal\"\n      }), _jsxs(View, {\n        style: styles.menuGrid,\n        children: [_jsxs(TouchableOpacity, {\n          style: styles.menuItem,\n          onPress: function onPress() {\n            return navigation.navigate('Products');\n          },\n          children: [_jsx(Text, {\n            style: styles.menuIcon,\n            children: \"\\uD83D\\uDCE6\"\n          }), _jsx(Text, {\n            style: styles.menuText,\n            children: \"Produtos\"\n          })]\n        }), _jsxs(TouchableOpacity, {\n          style: styles.menuItem,\n          onPress: function onPress() {\n            return navigation.navigate('NewSale');\n          },\n          children: [_jsx(Text, {\n            style: styles.menuIcon,\n            children: \"\\uD83D\\uDCB0\"\n          }), _jsx(Text, {\n            style: styles.menuText,\n            children: \"Nova Venda\"\n          })]\n        }), _jsxs(TouchableOpacity, {\n          style: styles.menuItem,\n          onPress: function onPress() {\n            return navigation.navigate('SalesHistory');\n          },\n          children: [_jsx(Text, {\n            style: styles.menuIcon,\n            children: \"\\uD83D\\uDCCA\"\n          }), _jsx(Text, {\n            style: styles.menuText,\n            children: \"Hist\\xF3rico\"\n          })]\n        }), _jsxs(TouchableOpacity, {\n          style: styles.menuItem,\n          onPress: function onPress() {\n            return navigation.navigate('Reports');\n          },\n          children: [_jsx(Text, {\n            style: styles.menuIcon,\n            children: \"\\uD83D\\uDCC8\"\n          }), _jsx(Text, {\n            style: styles.menuText,\n            children: \"Relat\\xF3rios\"\n          })]\n        })]\n      })]\n    })]\n  });\n}\nvar styles = StyleSheet.create({\n  container: {\n    flex: 1,\n    backgroundColor: '#f5f5f5'\n  },\n  loadingContainer: {\n    flex: 1,\n    justifyContent: 'center',\n    alignItems: 'center',\n    backgroundColor: '#f5f5f5'\n  },\n  loadingText: {\n    marginTop: 10,\n    color: '#666',\n    fontSize: 16\n  },\n  header: {\n    backgroundColor: '#2196F3',\n    paddingTop: 50,\n    paddingBottom: 20,\n    paddingHorizontal: 20,\n    alignItems: 'center',\n    position: 'relative'\n  },\n  refreshButton: {\n    position: 'absolute',\n    right: 20,\n    top: 55,\n    width: 36,\n    height: 36,\n    justifyContent: 'center',\n    alignItems: 'center',\n    backgroundColor: 'rgba(255,255,255,0.2)',\n    borderRadius: 18\n  },\n  title: {\n    fontSize: 28,\n    fontWeight: 'bold',\n    color: 'white',\n    marginBottom: 5\n  },\n  subtitle: {\n    fontSize: 16,\n    color: 'white',\n    opacity: 0.9\n  },\n  cardsContainer: {\n    padding: 20\n  },\n  row: {\n    flexDirection: 'row',\n    justifyContent: 'space-between',\n    marginBottom: 15\n  },\n  card: {\n    width: '48%',\n    padding: 20,\n    borderRadius: 12,\n    elevation: 3,\n    shadowColor: '#000',\n    shadowOffset: {\n      width: 0,\n      height: 2\n    },\n    shadowOpacity: 0.1,\n    shadowRadius: 4\n  },\n  cardPrimary: {\n    backgroundColor: '#2196F3'\n  },\n  cardSuccess: {\n    backgroundColor: '#4CAF50'\n  },\n  cardInfo: {\n    backgroundColor: '#FF9800'\n  },\n  cardWarning: {\n    backgroundColor: '#F44336'\n  },\n  cardValue: {\n    fontSize: 18,\n    fontWeight: 'bold',\n    color: 'white',\n    marginBottom: 5\n  },\n  cardLabel: {\n    fontSize: 12,\n    color: 'white',\n    opacity: 0.9\n  },\n  chartContainer: {\n    paddingHorizontal: 20,\n    paddingBottom: 20\n  },\n  chartTitle: {\n    fontSize: 16,\n    fontWeight: 'bold',\n    color: '#333',\n    marginBottom: 5\n  },\n  menuContainer: {\n    padding: 20,\n    paddingTop: 0\n  },\n  menuTitle: {\n    fontSize: 20,\n    fontWeight: 'bold',\n    color: '#333',\n    marginBottom: 20\n  },\n  menuGrid: {\n    flexDirection: 'row',\n    flexWrap: 'wrap',\n    justifyContent: 'space-between'\n  },\n  menuItem: {\n    width: '48%',\n    backgroundColor: 'white',\n    padding: 20,\n    borderRadius: 12,\n    alignItems: 'center',\n    marginBottom: 15,\n    elevation: 2,\n    shadowColor: '#000',\n    shadowOffset: {\n      width: 0,\n      height: 1\n    },\n    shadowOpacity: 0.1,\n    shadowRadius: 2\n  },\n  menuIcon: {\n    fontSize: 32,\n    marginBottom: 10\n  },\n  menuText: {\n    fontSize: 16,\n    fontWeight: '600',\n    color: '#333'\n  }\n});","map":{"version":3,"names":["React","useState","View","Text","StyleSheet","ScrollView","TouchableOpacity","ActivityIndicator","Alert","RefreshControl","useFocusEffect","LineChart","Dimensions","Ionicons","jsx","_jsx","jsxs","_jsxs","DashboardScreen","_ref","navigation","_useState","vendas_mes","total_produtos","lucro_mes","vendas_pendentes","vendas_historico","lucro_historico","_useState2","_slicedToArray","data","setData","_useState3","_useState4","loading","setLoading","_useState5","_useState6","refreshing","setRefreshing","loadDashboardData","_ref2","_asyncToGenerator","showLoading","arguments","length","undefined","console","log","response","fetch","ok","Error","status","statusText","result","json","vendasHistorico","lucroHistorico","vendasMes","produtos","lucroMes","pendentes","error","alert","message","text","apply","useCallback","onRefresh","formatCurrency","value","Intl","NumberFormat","style","currency","format","styles","loadingContainer","children","size","color","loadingText","container","refreshControl","header","title","subtitle","refreshButton","onPress","name","cardsContainer","row","card","cardPrimary","cardValue","cardLabel","cardSuccess","cardInfo","cardWarning","chartContainer","chartTitle","labels","datasets","strokeWidth","label","legend","width","get","height","chartConfig","backgroundGradientFrom","backgroundGradientTo","decimalPlaces","opacity","labelColor","borderRadius","propsForDots","r","stroke","marginVertical","menuContainer","menuTitle","menuGrid","menuItem","navigate","menuIcon","menuText","create","flex","backgroundColor","justifyContent","alignItems","marginTop","fontSize","paddingTop","paddingBottom","paddingHorizontal","position","right","top","fontWeight","marginBottom","padding","flexDirection","elevation","shadowColor","shadowOffset","shadowOpacity","shadowRadius","flexWrap"],"sources":["C:/Users/User/GEVapp/frontend/app/screens/DashboardScreen.tsx"],"sourcesContent":["import React, { useState, useEffect } from 'react';\r\nimport {\r\n  View,\r\n  Text,\r\n  StyleSheet,\r\n  ScrollView,\r\n  TouchableOpacity,\r\n  ActivityIndicator,\r\n  Alert,\r\n  RefreshControl,\r\n} from 'react-native';\r\nimport { useFocusEffect } from '@react-navigation/native';\r\nimport { LineChart } from 'react-native-chart-kit';\r\nimport { Dimensions } from 'react-native';\r\nimport { Ionicons } from '@expo/vector-icons';\r\n\r\ninterface DashboardData {\r\n  vendas_mes: number;\r\n  total_produtos: number;\r\n  lucro_mes: number;\r\n  vendas_pendentes: number;\r\n  vendas_historico?: number[];\r\n  lucro_historico?: number[];\r\n}\r\n\r\nexport default function DashboardScreen({ navigation }: any) {\r\n  const [data, setData] = useState<DashboardData>({\r\n    vendas_mes: 0,\r\n    total_produtos: 0,\r\n    lucro_mes: 0,\r\n    vendas_pendentes: 0,\r\n    vendas_historico: [],\r\n    lucro_historico: [],\r\n  });\r\n  const [loading, setLoading] = useState(true);\r\n  const [refreshing, setRefreshing] = useState(false);\r\n\r\n  const loadDashboardData = async (showLoading = true) => {\r\n    try {\r\n      if (showLoading) setLoading(true);\r\n\r\n      console.log('📊 Carregando dados do dashboard...');\r\n\r\n      const response = await fetch('http://localhost:3000/api/dashboard/summary');\r\n      if (!response.ok) throw new Error(`HTTP ${response.status}: ${response.statusText}`);\r\n      const result = await response.json();\r\n\r\n      // Ajuste para dados históricos de teste se não vier do backend\r\n      const vendasHistorico = result.vendas_historico || [1000, 1200, 900, 1500, 1300, 1600, 1800, 1700, 2000, 1900, 2100, 2300];\r\n      const lucroHistorico = result.lucro_historico || [200, 250, 180, 300, 240, 320, 350, 330, 400, 370, 420, 450];\r\n\r\n      setData({\r\n        vendas_mes: result.vendasMes || 0,\r\n        total_produtos: result.produtos || 0,\r\n        lucro_mes: result.lucroMes || 0,\r\n        vendas_pendentes: result.pendentes || 0,\r\n        vendas_historico: vendasHistorico,\r\n        lucro_historico: lucroHistorico,\r\n      });\r\n\r\n      console.log('✅ Dashboard atualizado com sucesso');\r\n    } catch (error: any) {\r\n      console.error('❌ Erro no dashboard:', error);\r\n\r\n      setData({\r\n        vendas_mes: 0,\r\n        total_produtos: 0,\r\n        lucro_mes: 0,\r\n        vendas_pendentes: 0,\r\n        vendas_historico: [],\r\n        lucro_historico: [],\r\n      });\r\n\r\n      Alert.alert(\r\n        'Erro de Conexão',\r\n        'Não foi possível carregar os dados do dashboard. Verifique se o backend está rodando.\\n\\nErro: ' + error.message,\r\n        [{ text: 'OK' }]\r\n      );\r\n    } finally {\r\n      if (showLoading) setLoading(false);\r\n      setRefreshing(false);\r\n    }\r\n  };\r\n\r\n  useFocusEffect(\r\n    React.useCallback(() => {\r\n      loadDashboardData();\r\n    }, [])\r\n  );\r\n\r\n  const onRefresh = () => {\r\n    setRefreshing(true);\r\n    loadDashboardData(false);\r\n  };\r\n\r\n  const formatCurrency = (value: number) =>\r\n    new Intl.NumberFormat('pt-BR', { style: 'currency', currency: 'BRL' }).format(value);\r\n\r\n  if (loading) {\r\n    return (\r\n      <View style={styles.loadingContainer}>\r\n        <ActivityIndicator size=\"large\" color=\"#2196F3\" />\r\n        <Text style={styles.loadingText}>Carregando dashboard...</Text>\r\n      </View>\r\n    );\r\n  }\r\n\r\n  return (\r\n    <ScrollView\r\n      style={styles.container}\r\n      refreshControl={<RefreshControl refreshing={refreshing} onRefresh={onRefresh} />}\r\n    >\r\n      {/* Header com botão de refresh */}\r\n      <View style={styles.header}>\r\n        <Text style={styles.title}>GEV App</Text>\r\n        <Text style={styles.subtitle}>Gestão Empresarial de Vendas</Text>\r\n\r\n        <TouchableOpacity style={styles.refreshButton} onPress={() => loadDashboardData()}>\r\n          {loading ? (\r\n            <ActivityIndicator color=\"white\" />\r\n          ) : (\r\n            <Ionicons name=\"refresh\" size={24} color=\"white\" />\r\n          )}\r\n        </TouchableOpacity>\r\n      </View>\r\n\r\n      {/* Cards */}\r\n      <View style={styles.cardsContainer}>\r\n        <View style={styles.row}>\r\n          <View style={[styles.card, styles.cardPrimary]}>\r\n            <Text style={styles.cardValue}>{formatCurrency(data.vendas_mes)}</Text>\r\n            <Text style={styles.cardLabel}>Vendas do Mês</Text>\r\n          </View>\r\n          <View style={[styles.card, styles.cardSuccess]}>\r\n            <Text style={styles.cardValue}>{formatCurrency(data.lucro_mes)}</Text>\r\n            <Text style={styles.cardLabel}>Lucro do Mês</Text>\r\n          </View>\r\n        </View>\r\n\r\n        <View style={styles.row}>\r\n          <View style={[styles.card, styles.cardInfo]}>\r\n            <Text style={styles.cardValue}>{data.total_produtos}</Text>\r\n            <Text style={styles.cardLabel}>Produtos Cadastrados</Text>\r\n          </View>\r\n          <View style={[styles.card, styles.cardWarning]}>\r\n            <Text style={styles.cardValue}>{data.vendas_pendentes}</Text>\r\n            <Text style={styles.cardLabel}>Vendas Pendentes</Text>\r\n          </View>\r\n        </View>\r\n      </View>\r\n\r\n      {/* Gráfico Vendas x Lucro */}\r\n      <View style={styles.chartContainer}>\r\n        <Text style={styles.chartTitle}>Vendas vs Lucro (Últimos 12 meses)</Text>\r\n        <LineChart\r\n          data={{\r\n            labels: ['Jan','Fev','Mar','Abr','Mai','Jun','Jul','Ago','Set','Out','Nov','Dez'],\r\n            datasets: [\r\n              { data: data.vendas_historico || [], color: () => '#2196F3', strokeWidth: 2, label: 'Vendas' },\r\n              { data: data.lucro_historico || [], color: () => '#4CAF50', strokeWidth: 2, label: 'Lucro' },\r\n            ],\r\n            legend: ['Vendas', 'Lucro'],\r\n          }}\r\n          width={Dimensions.get('window').width - 40}\r\n          height={220}\r\n          chartConfig={{\r\n            backgroundGradientFrom: '#f5f5f5',\r\n            backgroundGradientTo: '#f5f5f5',\r\n            decimalPlaces: 2,\r\n            color: (opacity = 1) => `rgba(33, 150, 243, ${opacity})`,\r\n            labelColor: (opacity = 1) => `rgba(0,0,0, ${opacity})`,\r\n            style: { borderRadius: 16 },\r\n            propsForDots: { r: '4', strokeWidth: '2', stroke: '#2196F3' },\r\n          }}\r\n          style={{ marginVertical: 8, borderRadius: 16 }}\r\n        />\r\n      </View>\r\n\r\n      {/* Menu */}\r\n      <View style={styles.menuContainer}>\r\n        <Text style={styles.menuTitle}>Menu Principal</Text>\r\n        <View style={styles.menuGrid}>\r\n          <TouchableOpacity style={styles.menuItem} onPress={() => navigation.navigate('Products')}>\r\n            <Text style={styles.menuIcon}>📦</Text>\r\n            <Text style={styles.menuText}>Produtos</Text>\r\n          </TouchableOpacity>\r\n          <TouchableOpacity style={styles.menuItem} onPress={() => navigation.navigate('NewSale')}>\r\n            <Text style={styles.menuIcon}>💰</Text>\r\n            <Text style={styles.menuText}>Nova Venda</Text>\r\n          </TouchableOpacity>\r\n          <TouchableOpacity style={styles.menuItem} onPress={() => navigation.navigate('SalesHistory')}>\r\n            <Text style={styles.menuIcon}>📊</Text>\r\n            <Text style={styles.menuText}>Histórico</Text>\r\n          </TouchableOpacity>\r\n          <TouchableOpacity style={styles.menuItem} onPress={() => navigation.navigate('Reports')}>\r\n            <Text style={styles.menuIcon}>📈</Text>\r\n            <Text style={styles.menuText}>Relatórios</Text>\r\n          </TouchableOpacity>\r\n        </View>\r\n      </View>\r\n    </ScrollView>\r\n  );\r\n}\r\n\r\nconst styles = StyleSheet.create({\r\n  container: { flex: 1, backgroundColor: '#f5f5f5' },\r\n  loadingContainer: { flex: 1, justifyContent: 'center', alignItems: 'center', backgroundColor: '#f5f5f5' },\r\n  loadingText: { marginTop: 10, color: '#666', fontSize: 16 },\r\n  header: { backgroundColor: '#2196F3', paddingTop: 50, paddingBottom: 20, paddingHorizontal: 20, alignItems: 'center', position: 'relative' },\r\n  refreshButton: { position: 'absolute', right: 20, top: 55, width: 36, height: 36, justifyContent: 'center', alignItems: 'center', backgroundColor: 'rgba(255,255,255,0.2)', borderRadius: 18 },\r\n  title: { fontSize: 28, fontWeight: 'bold', color: 'white', marginBottom: 5 },\r\n  subtitle: { fontSize: 16, color: 'white', opacity: 0.9 },\r\n  cardsContainer: { padding: 20 },\r\n  row: { flexDirection: 'row', justifyContent: 'space-between', marginBottom: 15 },\r\n  card: { width: '48%', padding: 20, borderRadius: 12, elevation: 3, shadowColor: '#000', shadowOffset: { width: 0, height: 2 }, shadowOpacity: 0.1, shadowRadius: 4 },\r\n  cardPrimary: { backgroundColor: '#2196F3' },\r\n  cardSuccess: { backgroundColor: '#4CAF50' },\r\n  cardInfo: { backgroundColor: '#FF9800' },\r\n  cardWarning: { backgroundColor: '#F44336' },\r\n  cardValue: { fontSize: 18, fontWeight: 'bold', color: 'white', marginBottom: 5 },\r\n  cardLabel: { fontSize: 12, color: 'white', opacity: 0.9 },\r\n  chartContainer: { paddingHorizontal: 20, paddingBottom: 20 },\r\n  chartTitle: { fontSize: 16, fontWeight: 'bold', color: '#333', marginBottom: 5 },\r\n  menuContainer: { padding: 20, paddingTop: 0 },\r\n  menuTitle: { fontSize: 20, fontWeight: 'bold', color: '#333', marginBottom: 20 },\r\n  menuGrid: { flexDirection: 'row', flexWrap: 'wrap', justifyContent: 'space-between' },\r\n  menuItem: { width: '48%', backgroundColor: 'white', padding: 20, borderRadius: 12, alignItems: 'center', marginBottom: 15, elevation: 2, shadowColor: '#000', shadowOffset: { width: 0, height: 1 }, shadowOpacity: 0.1, shadowRadius: 2 },\r\n  menuIcon: { fontSize: 32, marginBottom: 10 },\r\n  menuText: { fontSize: 16, fontWeight: '600', color: '#333' },\r\n});\r\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}