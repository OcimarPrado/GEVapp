{"ast":null,"code":"import _asyncToGenerator from \"@babel/runtime/helpers/asyncToGenerator\";\nimport _slicedToArray from \"@babel/runtime/helpers/slicedToArray\";\nimport React, { useState } from 'react';\nimport View from \"react-native-web/dist/exports/View\";\nimport Text from \"react-native-web/dist/exports/Text\";\nimport StyleSheet from \"react-native-web/dist/exports/StyleSheet\";\nimport ScrollView from \"react-native-web/dist/exports/ScrollView\";\nimport TouchableOpacity from \"react-native-web/dist/exports/TouchableOpacity\";\nimport ActivityIndicator from \"react-native-web/dist/exports/ActivityIndicator\";\nimport Alert from \"react-native-web/dist/exports/Alert\";\nimport RefreshControl from \"react-native-web/dist/exports/RefreshControl\";\nimport { useFocusEffect } from '@react-navigation/native';\nimport { jsx as _jsx, jsxs as _jsxs } from \"react/jsx-runtime\";\nexport default function DashboardScreen(_ref) {\n  var navigation = _ref.navigation;\n  var _useState = useState({\n      vendas_mes: 0,\n      total_produtos: 0,\n      lucro_mes: 0,\n      vendas_pendentes: 0\n    }),\n    _useState2 = _slicedToArray(_useState, 2),\n    data = _useState2[0],\n    setData = _useState2[1];\n  var _useState3 = useState(true),\n    _useState4 = _slicedToArray(_useState3, 2),\n    loading = _useState4[0],\n    setLoading = _useState4[1];\n  var _useState5 = useState(false),\n    _useState6 = _slicedToArray(_useState5, 2),\n    refreshing = _useState6[0],\n    setRefreshing = _useState6[1];\n  var _loadDashboardData = function () {\n    var _ref2 = _asyncToGenerator(function* () {\n      var showLoading = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : true;\n      try {\n        if (showLoading) {\n          setLoading(true);\n        }\n        console.log('üìä Carregando dados do dashboard...');\n        var statusResponse = yield fetch('http://localhost:3000/api/status');\n        if (!statusResponse.ok) {\n          throw new Error('Backend n√£o est√° respondendo');\n        }\n        console.log('‚úÖ Backend conectado, carregando dashboard...');\n        var response = yield fetch('http://localhost:3000/api/dashboard');\n        if (!response.ok) {\n          throw new Error(\"HTTP \" + response.status + \": \" + response.statusText);\n        }\n        var result = yield response.json();\n        console.log('üìä Dados do dashboard recebidos:', result);\n        if (result.success && result.data) {\n          setData({\n            vendas_mes: result.data.vendas_mes || 0,\n            total_produtos: result.data.total_produtos || 0,\n            lucro_mes: result.data.lucro_mes || 0,\n            vendas_pendentes: result.data.vendas_pendentes || 0\n          });\n          console.log('‚úÖ Dashboard atualizado com sucesso');\n        } else {\n          throw new Error(result.error || 'Resposta inv√°lida do servidor');\n        }\n      } catch (error) {\n        console.error('‚ùå Erro no dashboard:', error);\n        setData({\n          vendas_mes: 0,\n          total_produtos: 0,\n          lucro_mes: 0,\n          vendas_pendentes: 0\n        });\n        Alert.alert('Erro de Conex√£o', 'N√£o foi poss√≠vel carregar os dados do dashboard. Verifique se o backend est√° rodando na porta 3000.\\n\\nErro: ' + error.message, [{\n          text: 'Tentar Novamente',\n          onPress: function onPress() {\n            return _loadDashboardData();\n          }\n        }, {\n          text: 'OK'\n        }]);\n      } finally {\n        if (showLoading) {\n          setLoading(false);\n        }\n        setRefreshing(false);\n      }\n    });\n    return function loadDashboardData() {\n      return _ref2.apply(this, arguments);\n    };\n  }();\n  useFocusEffect(React.useCallback(function () {\n    console.log('üîÑ Dashboard em foco, carregando dados...');\n    _loadDashboardData();\n  }, []));\n  var onRefresh = function onRefresh() {\n    setRefreshing(true);\n    _loadDashboardData(false);\n  };\n  var formatCurrency = function formatCurrency(value) {\n    return new Intl.NumberFormat('pt-BR', {\n      style: 'currency',\n      currency: 'BRL'\n    }).format(value);\n  };\n  var testBackend = function () {\n    var _ref3 = _asyncToGenerator(function* () {\n      try {\n        var _result$data, _result$data2;\n        console.log('üß™ Testando backend...');\n        var response = yield fetch('http://localhost:3000/api/status');\n        var result = yield response.json();\n        Alert.alert('Teste de Backend', \"Status: \" + (result.success ? 'Conectado' : 'Erro') + \"\\nApp: \" + ((_result$data = result.data) == null ? void 0 : _result$data.app) + \"\\nVers\\xE3o: \" + ((_result$data2 = result.data) == null ? void 0 : _result$data2.version), [{\n          text: 'OK'\n        }]);\n      } catch (error) {\n        Alert.alert('Erro de Conex√£o', \"N\\xE3o foi poss\\xEDvel conectar ao backend:\\n\" + error.message + \"\\n\\nVerifique se o servidor est\\xE1 rodando em http://localhost:3000\");\n      }\n    });\n    return function testBackend() {\n      return _ref3.apply(this, arguments);\n    };\n  }();\n  if (loading) {\n    return _jsxs(View, {\n      style: styles.loadingContainer,\n      children: [_jsx(ActivityIndicator, {\n        size: \"large\",\n        color: \"#2196F3\"\n      }), _jsx(Text, {\n        style: styles.loadingText,\n        children: \"Carregando dashboard...\"\n      })]\n    });\n  }\n  return _jsxs(ScrollView, {\n    style: styles.container,\n    refreshControl: _jsx(RefreshControl, {\n      refreshing: refreshing,\n      onRefresh: onRefresh\n    }),\n    children: [_jsxs(View, {\n      style: styles.header,\n      children: [_jsx(Text, {\n        style: styles.title,\n        children: \"GEV App\"\n      }), _jsx(Text, {\n        style: styles.subtitle,\n        children: \"Gest\\xE3o Empresarial de Vendas\"\n      }), __DEV__ && _jsx(TouchableOpacity, {\n        style: styles.debugButton,\n        onPress: testBackend,\n        children: _jsx(Text, {\n          style: styles.debugButtonText,\n          children: \"\\uD83D\\uDD27\"\n        })\n      })]\n    }), _jsxs(View, {\n      style: styles.cardsContainer,\n      children: [_jsxs(View, {\n        style: styles.row,\n        children: [_jsxs(TouchableOpacity, {\n          style: [styles.card, styles.cardPrimary],\n          children: [_jsx(Text, {\n            style: styles.cardValue,\n            children: formatCurrency(data.vendas_mes)\n          }), _jsx(Text, {\n            style: styles.cardLabel,\n            children: \"Vendas do M\\xEAs\"\n          })]\n        }), _jsxs(TouchableOpacity, {\n          style: [styles.card, styles.cardSuccess],\n          children: [_jsx(Text, {\n            style: styles.cardValue,\n            children: formatCurrency(data.lucro_mes)\n          }), _jsx(Text, {\n            style: styles.cardLabel,\n            children: \"Lucro do M\\xEAs\"\n          })]\n        })]\n      }), _jsxs(View, {\n        style: styles.row,\n        children: [_jsxs(TouchableOpacity, {\n          style: [styles.card, styles.cardInfo],\n          children: [_jsx(Text, {\n            style: styles.cardValue,\n            children: data.total_produtos\n          }), _jsx(Text, {\n            style: styles.cardLabel,\n            children: \"Produtos Cadastrados\"\n          })]\n        }), _jsxs(TouchableOpacity, {\n          style: [styles.card, styles.cardWarning],\n          children: [_jsx(Text, {\n            style: styles.cardValue,\n            children: data.vendas_pendentes\n          }), _jsx(Text, {\n            style: styles.cardLabel,\n            children: \"Vendas Pendentes\"\n          })]\n        })]\n      })]\n    }), _jsxs(View, {\n      style: styles.menuContainer,\n      children: [_jsx(Text, {\n        style: styles.menuTitle,\n        children: \"Menu Principal\"\n      }), _jsxs(View, {\n        style: styles.menuGrid,\n        children: [_jsxs(TouchableOpacity, {\n          style: styles.menuItem,\n          onPress: function onPress() {\n            return navigation.navigate('Products');\n          },\n          children: [_jsx(Text, {\n            style: styles.menuIcon,\n            children: \"\\uD83D\\uDCE6\"\n          }), _jsx(Text, {\n            style: styles.menuText,\n            children: \"Produtos\"\n          }), _jsx(Text, {\n            style: styles.menuSubtext,\n            children: \"Gerenciar estoque\"\n          })]\n        }), _jsxs(TouchableOpacity, {\n          style: styles.menuItem,\n          onPress: function onPress() {\n            return navigation.navigate('NewSale');\n          },\n          children: [_jsx(Text, {\n            style: styles.menuIcon,\n            children: \"\\uD83D\\uDCB0\"\n          }), _jsx(Text, {\n            style: styles.menuText,\n            children: \"Nova Venda\"\n          }), _jsx(Text, {\n            style: styles.menuSubtext,\n            children: \"Registrar venda\"\n          })]\n        }), _jsxs(TouchableOpacity, {\n          style: styles.menuItem,\n          onPress: function onPress() {\n            return navigation.navigate('SalesHistory');\n          },\n          children: [_jsx(Text, {\n            style: styles.menuIcon,\n            children: \"\\uD83D\\uDCCA\"\n          }), _jsx(Text, {\n            style: styles.menuText,\n            children: \"Hist\\xF3rico\"\n          }), _jsx(Text, {\n            style: styles.menuSubtext,\n            children: \"Ver vendas\"\n          })]\n        }), _jsxs(TouchableOpacity, {\n          style: styles.menuItem,\n          onPress: function onPress() {\n            return navigation.navigate('Reports');\n          },\n          children: [_jsx(Text, {\n            style: styles.menuIcon,\n            children: \"\\uD83D\\uDCC8\"\n          }), _jsx(Text, {\n            style: styles.menuText,\n            children: \"Relat\\xF3rios\"\n          }), _jsx(Text, {\n            style: styles.menuSubtext,\n            children: \"An\\xE1lises\"\n          })]\n        })]\n      })]\n    }), __DEV__ && _jsxs(View, {\n      style: styles.debugInfo,\n      children: [_jsx(Text, {\n        style: styles.debugTitle,\n        children: \"Debug Info:\"\n      }), _jsxs(Text, {\n        style: styles.debugText,\n        children: [\"Vendas: \", data.vendas_mes]\n      }), _jsxs(Text, {\n        style: styles.debugText,\n        children: [\"Produtos: \", data.total_produtos]\n      }), _jsxs(Text, {\n        style: styles.debugText,\n        children: [\"Lucro: \", data.lucro_mes]\n      }), _jsxs(Text, {\n        style: styles.debugText,\n        children: [\"Pendentes: \", data.vendas_pendentes]\n      }), _jsx(TouchableOpacity, {\n        style: styles.refreshButton,\n        onPress: function onPress() {\n          return _loadDashboardData();\n        },\n        children: _jsx(Text, {\n          style: styles.refreshButtonText,\n          children: \"\\uD83D\\uDD04 Recarregar Dados\"\n        })\n      })]\n    })]\n  });\n}\nvar styles = StyleSheet.create({\n  container: {\n    flex: 1,\n    backgroundColor: '#f5f5f5'\n  },\n  loadingContainer: {\n    flex: 1,\n    justifyContent: 'center',\n    alignItems: 'center',\n    backgroundColor: '#f5f5f5'\n  },\n  loadingText: {\n    marginTop: 10,\n    color: '#666',\n    fontSize: 16\n  },\n  header: {\n    backgroundColor: '#2196F3',\n    paddingTop: 50,\n    paddingBottom: 30,\n    paddingHorizontal: 20,\n    alignItems: 'center',\n    position: 'relative'\n  },\n  debugButton: {\n    position: 'absolute',\n    right: 20,\n    top: 55,\n    width: 30,\n    height: 30,\n    justifyContent: 'center',\n    alignItems: 'center',\n    backgroundColor: 'rgba(255,255,255,0.2)',\n    borderRadius: 15\n  },\n  debugButtonText: {\n    fontSize: 16\n  },\n  title: {\n    fontSize: 28,\n    fontWeight: 'bold',\n    color: 'white',\n    marginBottom: 5\n  },\n  subtitle: {\n    fontSize: 16,\n    color: 'white',\n    opacity: 0.9\n  },\n  cardsContainer: {\n    padding: 20\n  },\n  row: {\n    flexDirection: 'row',\n    justifyContent: 'space-between',\n    marginBottom: 15\n  },\n  card: {\n    width: '48%',\n    padding: 20,\n    borderRadius: 12,\n    elevation: 3,\n    shadowColor: '#000',\n    shadowOffset: {\n      width: 0,\n      height: 2\n    },\n    shadowOpacity: 0.1,\n    shadowRadius: 4\n  },\n  cardPrimary: {\n    backgroundColor: '#2196F3'\n  },\n  cardSuccess: {\n    backgroundColor: '#4CAF50'\n  },\n  cardInfo: {\n    backgroundColor: '#FF9800'\n  },\n  cardWarning: {\n    backgroundColor: '#F44336'\n  },\n  cardValue: {\n    fontSize: 18,\n    fontWeight: 'bold',\n    color: 'white',\n    marginBottom: 5\n  },\n  cardLabel: {\n    fontSize: 12,\n    color: 'white',\n    opacity: 0.9\n  },\n  menuContainer: {\n    padding: 20,\n    paddingTop: 10\n  },\n  menuTitle: {\n    fontSize: 20,\n    fontWeight: 'bold',\n    color: '#333',\n    marginBottom: 20\n  },\n  menuGrid: {\n    flexDirection: 'row',\n    flexWrap: 'wrap',\n    justifyContent: 'space-between'\n  },\n  menuItem: {\n    width: '48%',\n    backgroundColor: 'white',\n    padding: 20,\n    borderRadius: 12,\n    alignItems: 'center',\n    marginBottom: 15,\n    elevation: 2,\n    shadowColor: '#000',\n    shadowOffset: {\n      width: 0,\n      height: 1\n    },\n    shadowOpacity: 0.1,\n    shadowRadius: 2\n  },\n  menuIcon: {\n    fontSize: 32,\n    marginBottom: 10\n  },\n  menuText: {\n    fontSize: 16,\n    fontWeight: '600',\n    color: '#333',\n    marginBottom: 5\n  },\n  menuSubtext: {\n    fontSize: 12,\n    color: '#666',\n    textAlign: 'center'\n  },\n  debugInfo: {\n    margin: 20,\n    padding: 15,\n    backgroundColor: '#fff3cd',\n    borderRadius: 8,\n    borderWidth: 1,\n    borderColor: '#ffeaa7'\n  },\n  debugTitle: {\n    fontSize: 14,\n    fontWeight: 'bold',\n    marginBottom: 5\n  },\n  debugText: {\n    fontSize: 12,\n    color: '#856404',\n    marginBottom: 2\n  },\n  refreshButton: {\n    marginTop: 10,\n    padding: 8,\n    backgroundColor: '#007bff',\n    borderRadius: 5,\n    alignItems: 'center'\n  },\n  refreshButtonText: {\n    color: 'white',\n    fontSize: 12\n  }\n});","map":{"version":3,"names":["React","useState","View","Text","StyleSheet","ScrollView","TouchableOpacity","ActivityIndicator","Alert","RefreshControl","useFocusEffect","jsx","_jsx","jsxs","_jsxs","DashboardScreen","_ref","navigation","_useState","vendas_mes","total_produtos","lucro_mes","vendas_pendentes","_useState2","_slicedToArray","data","setData","_useState3","_useState4","loading","setLoading","_useState5","_useState6","refreshing","setRefreshing","loadDashboardData","_ref2","_asyncToGenerator","showLoading","arguments","length","undefined","console","log","statusResponse","fetch","ok","Error","response","status","statusText","result","json","success","error","alert","message","text","onPress","apply","useCallback","onRefresh","formatCurrency","value","Intl","NumberFormat","style","currency","format","testBackend","_ref3","_result$data","_result$data2","app","version","styles","loadingContainer","children","size","color","loadingText","container","refreshControl","header","title","subtitle","__DEV__","debugButton","debugButtonText","cardsContainer","row","card","cardPrimary","cardValue","cardLabel","cardSuccess","cardInfo","cardWarning","menuContainer","menuTitle","menuGrid","menuItem","navigate","menuIcon","menuText","menuSubtext","debugInfo","debugTitle","debugText","refreshButton","refreshButtonText","create","flex","backgroundColor","justifyContent","alignItems","marginTop","fontSize","paddingTop","paddingBottom","paddingHorizontal","position","right","top","width","height","borderRadius","fontWeight","marginBottom","opacity","padding","flexDirection","elevation","shadowColor","shadowOffset","shadowOpacity","shadowRadius","flexWrap","textAlign","margin","borderWidth","borderColor"],"sources":["C:/Users/User/GEVapp/frontend/app/screens/DashboardScreen.tsx"],"sourcesContent":["import React, { useState, useEffect } from 'react';\r\nimport {\r\n  View,\r\n  Text,\r\n  StyleSheet,\r\n  ScrollView,\r\n  TouchableOpacity,\r\n  ActivityIndicator,\r\n  Alert,\r\n  RefreshControl,\r\n} from 'react-native';\r\nimport { useFocusEffect } from '@react-navigation/native';\r\n\r\ninterface DashboardData {\r\n  vendas_mes: number;\r\n  total_produtos: number;\r\n  lucro_mes: number;\r\n  vendas_pendentes: number;\r\n}\r\n\r\nexport default function DashboardScreen({ navigation }: any) {\r\n  const [data, setData] = useState<DashboardData>({\r\n    vendas_mes: 0,\r\n    total_produtos: 0,\r\n    lucro_mes: 0,\r\n    vendas_pendentes: 0,\r\n  });\r\n  const [loading, setLoading] = useState(true);\r\n  const [refreshing, setRefreshing] = useState(false);\r\n\r\n  const loadDashboardData = async (showLoading = true) => {\r\n    try {\r\n      if (showLoading) {\r\n        setLoading(true);\r\n      }\r\n\r\n      console.log('üìä Carregando dados do dashboard...');\r\n      \r\n      // Testar conectividade primeiro\r\n      const statusResponse = await fetch('http://localhost:3000/api/status');\r\n      if (!statusResponse.ok) {\r\n        throw new Error('Backend n√£o est√° respondendo');\r\n      }\r\n      \r\n      console.log('‚úÖ Backend conectado, carregando dashboard...');\r\n\r\n      const response = await fetch('http://localhost:3000/api/dashboard');\r\n      \r\n      if (!response.ok) {\r\n        throw new Error(`HTTP ${response.status}: ${response.statusText}`);\r\n      }\r\n      \r\n      const result = await response.json();\r\n      console.log('üìä Dados do dashboard recebidos:', result);\r\n      \r\n      if (result.success && result.data) {\r\n        setData({\r\n          vendas_mes: result.data.vendas_mes || 0,\r\n          total_produtos: result.data.total_produtos || 0,\r\n          lucro_mes: result.data.lucro_mes || 0,\r\n          vendas_pendentes: result.data.vendas_pendentes || 0,\r\n        });\r\n        console.log('‚úÖ Dashboard atualizado com sucesso');\r\n      } else {\r\n        throw new Error(result.error || 'Resposta inv√°lida do servidor');\r\n      }\r\n\r\n    } catch (error: any) {\r\n      console.error('‚ùå Erro no dashboard:', error);\r\n      \r\n      // Mostrar dados padr√£o se n√£o conseguir carregar\r\n      setData({\r\n        vendas_mes: 0,\r\n        total_produtos: 0,\r\n        lucro_mes: 0,\r\n        vendas_pendentes: 0,\r\n      });\r\n      \r\n      Alert.alert(\r\n        'Erro de Conex√£o',\r\n        'N√£o foi poss√≠vel carregar os dados do dashboard. Verifique se o backend est√° rodando na porta 3000.\\n\\nErro: ' + error.message,\r\n        [\r\n          { text: 'Tentar Novamente', onPress: () => loadDashboardData() },\r\n          { text: 'OK' }\r\n        ]\r\n      );\r\n    } finally {\r\n      if (showLoading) {\r\n        setLoading(false);\r\n      }\r\n      setRefreshing(false);\r\n    }\r\n  };\r\n\r\n  // Carregar dados quando a tela ganha foco\r\n  useFocusEffect(\r\n    React.useCallback(() => {\r\n      console.log('üîÑ Dashboard em foco, carregando dados...');\r\n      loadDashboardData();\r\n    }, [])\r\n  );\r\n\r\n  const onRefresh = () => {\r\n    setRefreshing(true);\r\n    loadDashboardData(false);\r\n  };\r\n\r\n  const formatCurrency = (value: number) => {\r\n    return new Intl.NumberFormat('pt-BR', {\r\n      style: 'currency',\r\n      currency: 'BRL',\r\n    }).format(value);\r\n  };\r\n\r\n  const testBackend = async () => {\r\n    try {\r\n      console.log('üß™ Testando backend...');\r\n      const response = await fetch('http://localhost:3000/api/status');\r\n      const result = await response.json();\r\n      \r\n      Alert.alert(\r\n        'Teste de Backend',\r\n        `Status: ${result.success ? 'Conectado' : 'Erro'}\\nApp: ${result.data?.app}\\nVers√£o: ${result.data?.version}`,\r\n        [{ text: 'OK' }]\r\n      );\r\n    } catch (error: any) {\r\n      Alert.alert(\r\n        'Erro de Conex√£o',\r\n        `N√£o foi poss√≠vel conectar ao backend:\\n${error.message}\\n\\nVerifique se o servidor est√° rodando em http://localhost:3000`\r\n      );\r\n    }\r\n  };\r\n\r\n  if (loading) {\r\n    return (\r\n      <View style={styles.loadingContainer}>\r\n        <ActivityIndicator size=\"large\" color=\"#2196F3\" />\r\n        <Text style={styles.loadingText}>Carregando dashboard...</Text>\r\n      </View>\r\n    );\r\n  }\r\n\r\n  return (\r\n    <ScrollView \r\n      style={styles.container}\r\n      refreshControl={\r\n        <RefreshControl refreshing={refreshing} onRefresh={onRefresh} />\r\n      }\r\n    >\r\n      {/* Header */}\r\n      <View style={styles.header}>\r\n        <Text style={styles.title}>GEV App</Text>\r\n        <Text style={styles.subtitle}>Gest√£o Empresarial de Vendas</Text>\r\n        \r\n        {__DEV__ && (\r\n          <TouchableOpacity \r\n            style={styles.debugButton}\r\n            onPress={testBackend}\r\n          >\r\n            <Text style={styles.debugButtonText}>üîß</Text>\r\n          </TouchableOpacity>\r\n        )}\r\n      </View>\r\n\r\n      {/* Cards de m√©tricas */}\r\n      <View style={styles.cardsContainer}>\r\n        <View style={styles.row}>\r\n          <TouchableOpacity style={[styles.card, styles.cardPrimary]}>\r\n            <Text style={styles.cardValue}>\r\n              {formatCurrency(data.vendas_mes)}\r\n            </Text>\r\n            <Text style={styles.cardLabel}>Vendas do M√™s</Text>\r\n          </TouchableOpacity>\r\n\r\n          <TouchableOpacity style={[styles.card, styles.cardSuccess]}>\r\n            <Text style={styles.cardValue}>\r\n              {formatCurrency(data.lucro_mes)}\r\n            </Text>\r\n            <Text style={styles.cardLabel}>Lucro do M√™s</Text>\r\n          </TouchableOpacity>\r\n        </View>\r\n\r\n        <View style={styles.row}>\r\n          <TouchableOpacity style={[styles.card, styles.cardInfo]}>\r\n            <Text style={styles.cardValue}>{data.total_produtos}</Text>\r\n            <Text style={styles.cardLabel}>Produtos Cadastrados</Text>\r\n          </TouchableOpacity>\r\n\r\n          <TouchableOpacity style={[styles.card, styles.cardWarning]}>\r\n            <Text style={styles.cardValue}>{data.vendas_pendentes}</Text>\r\n            <Text style={styles.cardLabel}>Vendas Pendentes</Text>\r\n          </TouchableOpacity>\r\n        </View>\r\n      </View>\r\n\r\n      {/* Menu principal */}\r\n      <View style={styles.menuContainer}>\r\n        <Text style={styles.menuTitle}>Menu Principal</Text>\r\n        \r\n        <View style={styles.menuGrid}>\r\n          <TouchableOpacity \r\n            style={styles.menuItem}\r\n            onPress={() => navigation.navigate('Products')}\r\n          >\r\n            <Text style={styles.menuIcon}>üì¶</Text>\r\n            <Text style={styles.menuText}>Produtos</Text>\r\n            <Text style={styles.menuSubtext}>Gerenciar estoque</Text>\r\n          </TouchableOpacity>\r\n\r\n          <TouchableOpacity \r\n            style={styles.menuItem}\r\n            onPress={() => navigation.navigate('NewSale')}\r\n          >\r\n            <Text style={styles.menuIcon}>üí∞</Text>\r\n            <Text style={styles.menuText}>Nova Venda</Text>\r\n            <Text style={styles.menuSubtext}>Registrar venda</Text>\r\n          </TouchableOpacity>\r\n\r\n          <TouchableOpacity \r\n            style={styles.menuItem}\r\n            onPress={() => navigation.navigate('SalesHistory')}\r\n          >\r\n            <Text style={styles.menuIcon}>üìä</Text>\r\n            <Text style={styles.menuText}>Hist√≥rico</Text>\r\n            <Text style={styles.menuSubtext}>Ver vendas</Text>\r\n          </TouchableOpacity>\r\n\r\n          <TouchableOpacity \r\n            style={styles.menuItem}\r\n            onPress={() => navigation.navigate('Reports')}\r\n          >\r\n            <Text style={styles.menuIcon}>üìà</Text>\r\n            <Text style={styles.menuText}>Relat√≥rios</Text>\r\n            <Text style={styles.menuSubtext}>An√°lises</Text>\r\n          </TouchableOpacity>\r\n        </View>\r\n      </View>\r\n\r\n      {/* Debug info */}\r\n      {__DEV__ && (\r\n        <View style={styles.debugInfo}>\r\n          <Text style={styles.debugTitle}>Debug Info:</Text>\r\n          <Text style={styles.debugText}>Vendas: {data.vendas_mes}</Text>\r\n          <Text style={styles.debugText}>Produtos: {data.total_produtos}</Text>\r\n          <Text style={styles.debugText}>Lucro: {data.lucro_mes}</Text>\r\n          <Text style={styles.debugText}>Pendentes: {data.vendas_pendentes}</Text>\r\n          <TouchableOpacity \r\n            style={styles.refreshButton}\r\n            onPress={() => loadDashboardData()}\r\n          >\r\n            <Text style={styles.refreshButtonText}>üîÑ Recarregar Dados</Text>\r\n          </TouchableOpacity>\r\n        </View>\r\n      )}\r\n    </ScrollView>\r\n  );\r\n}\r\n\r\nconst styles = StyleSheet.create({\r\n  container: {\r\n    flex: 1,\r\n    backgroundColor: '#f5f5f5',\r\n  },\r\n  loadingContainer: {\r\n    flex: 1,\r\n    justifyContent: 'center',\r\n    alignItems: 'center',\r\n    backgroundColor: '#f5f5f5',\r\n  },\r\n  loadingText: {\r\n    marginTop: 10,\r\n    color: '#666',\r\n    fontSize: 16,\r\n  },\r\n  header: {\r\n    backgroundColor: '#2196F3',\r\n    paddingTop: 50,\r\n    paddingBottom: 30,\r\n    paddingHorizontal: 20,\r\n    alignItems: 'center',\r\n    position: 'relative',\r\n  },\r\n  debugButton: {\r\n    position: 'absolute',\r\n    right: 20,\r\n    top: 55,\r\n    width: 30,\r\n    height: 30,\r\n    justifyContent: 'center',\r\n    alignItems: 'center',\r\n    backgroundColor: 'rgba(255,255,255,0.2)',\r\n    borderRadius: 15,\r\n  },\r\n  debugButtonText: {\r\n    fontSize: 16,\r\n  },\r\n  title: {\r\n    fontSize: 28,\r\n    fontWeight: 'bold',\r\n    color: 'white',\r\n    marginBottom: 5,\r\n  },\r\n  subtitle: {\r\n    fontSize: 16,\r\n    color: 'white',\r\n    opacity: 0.9,\r\n  },\r\n  cardsContainer: {\r\n    padding: 20,\r\n  },\r\n  row: {\r\n    flexDirection: 'row',\r\n    justifyContent: 'space-between',\r\n    marginBottom: 15,\r\n  },\r\n  card: {\r\n    width: '48%',\r\n    padding: 20,\r\n    borderRadius: 12,\r\n    elevation: 3,\r\n    shadowColor: '#000',\r\n    shadowOffset: { width: 0, height: 2 },\r\n    shadowOpacity: 0.1,\r\n    shadowRadius: 4,\r\n  },\r\n  cardPrimary: {\r\n    backgroundColor: '#2196F3',\r\n  },\r\n  cardSuccess: {\r\n    backgroundColor: '#4CAF50',\r\n  },\r\n  cardInfo: {\r\n    backgroundColor: '#FF9800',\r\n  },\r\n  cardWarning: {\r\n    backgroundColor: '#F44336',\r\n  },\r\n  cardValue: {\r\n    fontSize: 18,\r\n    fontWeight: 'bold',\r\n    color: 'white',\r\n    marginBottom: 5,\r\n  },\r\n  cardLabel: {\r\n    fontSize: 12,\r\n    color: 'white',\r\n    opacity: 0.9,\r\n  },\r\n  menuContainer: {\r\n    padding: 20,\r\n    paddingTop: 10,\r\n  },\r\n  menuTitle: {\r\n    fontSize: 20,\r\n    fontWeight: 'bold',\r\n    color: '#333',\r\n    marginBottom: 20,\r\n  },\r\n  menuGrid: {\r\n    flexDirection: 'row',\r\n    flexWrap: 'wrap',\r\n    justifyContent: 'space-between',\r\n  },\r\n  menuItem: {\r\n    width: '48%',\r\n    backgroundColor: 'white',\r\n    padding: 20,\r\n    borderRadius: 12,\r\n    alignItems: 'center',\r\n    marginBottom: 15,\r\n    elevation: 2,\r\n    shadowColor: '#000',\r\n    shadowOffset: { width: 0, height: 1 },\r\n    shadowOpacity: 0.1,\r\n    shadowRadius: 2,\r\n  },\r\n  menuIcon: {\r\n    fontSize: 32,\r\n    marginBottom: 10,\r\n  },\r\n  menuText: {\r\n    fontSize: 16,\r\n    fontWeight: '600',\r\n    color: '#333',\r\n    marginBottom: 5,\r\n  },\r\n  menuSubtext: {\r\n    fontSize: 12,\r\n    color: '#666',\r\n    textAlign: 'center',\r\n  },\r\n  debugInfo: {\r\n    margin: 20,\r\n    padding: 15,\r\n    backgroundColor: '#fff3cd',\r\n    borderRadius: 8,\r\n    borderWidth: 1,\r\n    borderColor: '#ffeaa7',\r\n  },\r\n  debugTitle: {\r\n    fontSize: 14,\r\n    fontWeight: 'bold',\r\n    marginBottom: 5,\r\n  },\r\n  debugText: {\r\n    fontSize: 12,\r\n    color: '#856404',\r\n    marginBottom: 2,\r\n  },\r\n  refreshButton: {\r\n    marginTop: 10,\r\n    padding: 8,\r\n    backgroundColor: '#007bff',\r\n    borderRadius: 5,\r\n    alignItems: 'center',\r\n  },\r\n  refreshButtonText: {\r\n    color: 'white',\r\n    fontSize: 12,\r\n  },\r\n});"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}