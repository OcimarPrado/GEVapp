{"ast":null,"code":"import _asyncToGenerator from \"@babel/runtime/helpers/asyncToGenerator\";\nimport _slicedToArray from \"@babel/runtime/helpers/slicedToArray\";\nimport React, { useState } from 'react';\nimport View from \"react-native-web/dist/exports/View\";\nimport Text from \"react-native-web/dist/exports/Text\";\nimport TextInput from \"react-native-web/dist/exports/TextInput\";\nimport TouchableOpacity from \"react-native-web/dist/exports/TouchableOpacity\";\nimport StyleSheet from \"react-native-web/dist/exports/StyleSheet\";\nimport Alert from \"react-native-web/dist/exports/Alert\";\nimport { jsx as _jsx, jsxs as _jsxs } from \"react/jsx-runtime\";\nexport default function RegisterScreen(_ref) {\n  var navigation = _ref.navigation;\n  var _useState = useState(''),\n    _useState2 = _slicedToArray(_useState, 2),\n    name = _useState2[0],\n    setName = _useState2[1];\n  var _useState3 = useState(''),\n    _useState4 = _slicedToArray(_useState3, 2),\n    email = _useState4[0],\n    setEmail = _useState4[1];\n  var _useState5 = useState(''),\n    _useState6 = _slicedToArray(_useState5, 2),\n    password = _useState6[0],\n    setPassword = _useState6[1];\n  var _useState7 = useState(false),\n    _useState8 = _slicedToArray(_useState7, 2),\n    loading = _useState8[0],\n    setLoading = _useState8[1];\n  var handleRegister = function () {\n    var _ref2 = _asyncToGenerator(function* () {\n      if (!name || !email || !password) {\n        Alert.alert('Erro', 'Preencha todos os campos');\n        return;\n      }\n      setLoading(true);\n      try {\n        var response = yield fetch('http://localhost:3000/api/register', {\n          method: 'POST',\n          headers: {\n            'Content-Type': 'application/json'\n          },\n          body: JSON.stringify({\n            nome: name.trim(),\n            email: email.trim().toLowerCase(),\n            senha: password\n          })\n        });\n        var data = yield response.json();\n        console.log(\"ðŸ“© Resposta do backend:\", data);\n        if (data.success) {\n          Alert.alert('âœ… Sucesso', 'Cadastro realizado com sucesso!');\n          setName('');\n          setEmail('');\n          setPassword('');\n          navigation.replace('Login');\n        } else {\n          Alert.alert('Erro', data.error || 'Falha no cadastro');\n        }\n      } catch (error) {\n        console.error(\"ðŸš¨ Erro de conexÃ£o:\", error);\n        Alert.alert('Erro', 'NÃ£o foi possÃ­vel conectar ao servidor. Verifique se o backend estÃ¡ rodando.');\n      } finally {\n        setLoading(false);\n      }\n    });\n    return function handleRegister() {\n      return _ref2.apply(this, arguments);\n    };\n  }();\n  return _jsxs(View, {\n    style: styles.container,\n    children: [_jsx(Text, {\n      style: styles.title,\n      children: \"Cadastro\"\n    }), _jsx(TextInput, {\n      style: styles.input,\n      placeholder: \"Nome\",\n      value: name,\n      onChangeText: setName\n    }), _jsx(TextInput, {\n      style: styles.input,\n      placeholder: \"Email\",\n      keyboardType: \"email-address\",\n      autoCapitalize: \"none\",\n      value: email,\n      onChangeText: setEmail\n    }), _jsx(TextInput, {\n      style: styles.input,\n      placeholder: \"Senha\",\n      secureTextEntry: true,\n      value: password,\n      onChangeText: setPassword\n    }), _jsx(TouchableOpacity, {\n      style: styles.button,\n      onPress: handleRegister,\n      disabled: loading,\n      children: _jsx(Text, {\n        style: styles.buttonText,\n        children: loading ? 'Carregando...' : 'Cadastrar'\n      })\n    }), _jsx(TouchableOpacity, {\n      onPress: function onPress() {\n        return navigation.navigate('Login');\n      },\n      children: _jsx(Text, {\n        style: styles.linkText,\n        children: \"J\\xE1 tem uma conta. Fa\\xE7a Login\"\n      })\n    })]\n  });\n}\nvar styles = StyleSheet.create({\n  container: {\n    flex: 1,\n    justifyContent: 'center',\n    alignItems: 'center',\n    padding: 20,\n    backgroundColor: '#f9f9f9'\n  },\n  title: {\n    fontSize: 28,\n    fontWeight: 'bold',\n    marginBottom: 25,\n    color: '#2196F3'\n  },\n  input: {\n    width: '100%',\n    padding: 14,\n    borderWidth: 1,\n    borderColor: '#ccc',\n    borderRadius: 8,\n    marginBottom: 15,\n    backgroundColor: '#fff'\n  },\n  button: {\n    backgroundColor: '#2196F3',\n    padding: 15,\n    borderRadius: 8,\n    width: '100%',\n    alignItems: 'center'\n  },\n  buttonText: {\n    color: 'white',\n    fontWeight: 'bold',\n    fontSize: 16\n  },\n  linkText: {\n    marginTop: 15,\n    color: '#2196F3',\n    textDecorationLine: 'underline'\n  }\n});","map":{"version":3,"names":["React","useState","View","Text","TextInput","TouchableOpacity","StyleSheet","Alert","jsx","_jsx","jsxs","_jsxs","RegisterScreen","_ref","navigation","_useState","_useState2","_slicedToArray","name","setName","_useState3","_useState4","email","setEmail","_useState5","_useState6","password","setPassword","_useState7","_useState8","loading","setLoading","handleRegister","_ref2","_asyncToGenerator","alert","response","fetch","method","headers","body","JSON","stringify","nome","trim","toLowerCase","senha","data","json","console","log","success","replace","error","apply","arguments","style","styles","container","children","title","input","placeholder","value","onChangeText","keyboardType","autoCapitalize","secureTextEntry","button","onPress","disabled","buttonText","navigate","linkText","create","flex","justifyContent","alignItems","padding","backgroundColor","fontSize","fontWeight","marginBottom","color","width","borderWidth","borderColor","borderRadius","marginTop","textDecorationLine"],"sources":["C:/Users/User/GEVapp/frontend/app/screens/RegisterScreen.tsx"],"sourcesContent":["import React, { useState } from 'react';\r\nimport { View, Text, TextInput, TouchableOpacity, StyleSheet, Alert, ActivityIndicator } from 'react-native';\r\n\r\nexport default function RegisterScreen({ navigation }: any) {\r\n  const [name, setName] = useState('');\r\n  const [email, setEmail] = useState('');\r\n  const [password, setPassword] = useState('');\r\n  const [loading, setLoading] = useState(false);\r\n\r\n  const handleRegister = async () => {\r\n    if (!name || !email || !password) {\r\n      Alert.alert('Erro', 'Preencha todos os campos');\r\n      return;\r\n    }\r\n\r\n    setLoading(true);\r\n\r\n    try {\r\n      const response = await fetch('http://localhost:3000/api/register', {\r\n        method: 'POST',\r\n        headers: { 'Content-Type': 'application/json' },\r\n        body: JSON.stringify({\r\n          nome: name.trim(),\r\n          email: email.trim().toLowerCase(),\r\n          senha: password\r\n        })\r\n      });\r\n\r\n      const data = await response.json();\r\n      console.log(\"ðŸ“© Resposta do backend:\", data);\r\n\r\n      if (data.success) {\r\n        Alert.alert('âœ… Sucesso', 'Cadastro realizado com sucesso!');\r\n        // Limpa os campos\r\n        setName('');\r\n        setEmail('');\r\n        setPassword('');\r\n        // Vai para a tela de login\r\n        navigation.replace('Login');\r\n      } else {\r\n        Alert.alert('Erro', data.error || 'Falha no cadastro');\r\n      }\r\n    } catch (error) {\r\n      console.error(\"ðŸš¨ Erro de conexÃ£o:\", error);\r\n      Alert.alert('Erro', 'NÃ£o foi possÃ­vel conectar ao servidor. Verifique se o backend estÃ¡ rodando.');\r\n    } finally {\r\n      setLoading(false);\r\n    }\r\n  };\r\n\r\n  return (\r\n    <View style={styles.container}>\r\n      <Text style={styles.title}>Cadastro</Text>\r\n      \r\n      <TextInput\r\n        style={styles.input}\r\n        placeholder=\"Nome\"\r\n        value={name}\r\n        onChangeText={setName}\r\n      />\r\n      \r\n      <TextInput\r\n        style={styles.input}\r\n        placeholder=\"Email\"\r\n        keyboardType=\"email-address\"\r\n        autoCapitalize=\"none\"\r\n        value={email}\r\n        onChangeText={setEmail}\r\n      />\r\n      \r\n      <TextInput\r\n        style={styles.input}\r\n        placeholder=\"Senha\"\r\n        secureTextEntry\r\n        value={password}\r\n        onChangeText={setPassword}\r\n      />\r\n\r\n      <TouchableOpacity \r\n      style={styles.button} \r\n      onPress={handleRegister} \r\n      disabled={loading}>\r\n        <Text style={styles.buttonText}>\r\n          {loading ? 'Carregando...' : 'Cadastrar'}\r\n          </Text>\r\n      </TouchableOpacity>\r\n      <TouchableOpacity onPress={() => navigation.navigate('Login')}>\r\n              <Text style={styles.linkText}>JÃ¡ tem uma conta. FaÃ§a Login</Text>\r\n            </TouchableOpacity>\r\n\r\n    </View>\r\n  );\r\n}\r\n\r\nconst styles = StyleSheet.create({\r\n  container: { flex: 1, justifyContent: 'center', alignItems: 'center', padding: 20, backgroundColor: '#f9f9f9' },\r\n  title: { fontSize: 28, fontWeight: 'bold', marginBottom: 25, color: '#2196F3' },\r\n  input: { width: '100%', padding: 14, borderWidth: 1, borderColor: '#ccc', borderRadius: 8, marginBottom: 15, backgroundColor: '#fff' },\r\n  button: { backgroundColor: '#2196F3', padding: 15, borderRadius: 8, width: '100%', alignItems: 'center' },\r\n  buttonText: { color: 'white', fontWeight: 'bold', fontSize: 16 },\r\n  linkText: { marginTop: 15, color: '#2196F3', textDecorationLine: 'underline' },\r\n});\r\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}