{"ast":null,"code":"import _asyncToGenerator from \"@babel/runtime/helpers/asyncToGenerator\";\nimport _slicedToArray from \"@babel/runtime/helpers/slicedToArray\";\nimport { useState } from \"react\";\nimport View from \"react-native-web/dist/exports/View\";\nimport TextInput from \"react-native-web/dist/exports/TextInput\";\nimport Button from \"react-native-web/dist/exports/Button\";\nimport Alert from \"react-native-web/dist/exports/Alert\";\nimport { addVenda } from \"../api\";\nimport { jsx as _jsx, jsxs as _jsxs } from \"react/jsx-runtime\";\nexport default function NewSaleScreen(_ref) {\n  var navigation = _ref.navigation;\n  var _useState = useState(\"\"),\n    _useState2 = _slicedToArray(_useState, 2),\n    cliente = _useState2[0],\n    setCliente = _useState2[1];\n  var _useState3 = useState(\"\"),\n    _useState4 = _slicedToArray(_useState3, 2),\n    total = _useState4[0],\n    setTotal = _useState4[1];\n  var salvarVenda = function () {\n    var _ref2 = _asyncToGenerator(function* () {\n      if (!cliente || !total) {\n        Alert.alert(\"Atenção\", \"Preencha todos os campos obrigatórios!\");\n        return;\n      }\n      try {\n        yield addVenda({\n          cliente_nome: cliente,\n          total: parseFloat(total)\n        });\n        Alert.alert(\"Sucesso\", \"Venda registrada com sucesso!\");\n        navigation.goBack();\n      } catch (_unused) {\n        Alert.alert(\"Erro\", \"Não foi possível registrar a venda\");\n      }\n    });\n    return function salvarVenda() {\n      return _ref2.apply(this, arguments);\n    };\n  }();\n  return _jsxs(View, {\n    style: {\n      padding: 20\n    },\n    children: [_jsx(TextInput, {\n      placeholder: \"Nome do Cliente\",\n      value: cliente,\n      onChangeText: setCliente,\n      style: {\n        marginBottom: 10,\n        borderBottomWidth: 1\n      }\n    }), _jsx(TextInput, {\n      placeholder: \"Valor total da venda\",\n      value: total,\n      onChangeText: setTotal,\n      keyboardType: \"numeric\",\n      style: {\n        marginBottom: 10,\n        borderBottomWidth: 1\n      }\n    }), _jsx(Button, {\n      title: \"Registrar Venda\",\n      onPress: salvarVenda\n    })]\n  });\n}","map":{"version":3,"names":["useState","View","TextInput","Button","Alert","addVenda","jsx","_jsx","jsxs","_jsxs","NewSaleScreen","_ref","navigation","_useState","_useState2","_slicedToArray","cliente","setCliente","_useState3","_useState4","total","setTotal","salvarVenda","_ref2","_asyncToGenerator","alert","cliente_nome","parseFloat","goBack","_unused","apply","arguments","style","padding","children","placeholder","value","onChangeText","marginBottom","borderBottomWidth","keyboardType","title","onPress"],"sources":["C:/Users/User/GEVapp/frontend/app/screens/NewSaleScreen.tsx"],"sourcesContent":["import { useState } from \"react\";\r\nimport { View, TextInput, Button, Alert } from \"react-native\";\r\nimport { addVenda } from \"../api\";\r\n\r\nexport default function NewSaleScreen({ navigation }: any) {\r\n  const [cliente, setCliente] = useState(\"\");\r\n  const [total, setTotal] = useState(\"\");\r\n\r\n  const salvarVenda = async () => {\r\n    if (!cliente || !total) {\r\n      Alert.alert(\"Atenção\", \"Preencha todos os campos obrigatórios!\");\r\n      return;\r\n    }\r\n\r\n    try {\r\n      await addVenda({ cliente_nome: cliente, total: parseFloat(total) });\r\n      Alert.alert(\"Sucesso\", \"Venda registrada com sucesso!\");\r\n      navigation.goBack();\r\n    } catch {\r\n      Alert.alert(\"Erro\", \"Não foi possível registrar a venda\");\r\n    }\r\n  };\r\n\r\n  return (\r\n    <View style={{ padding: 20 }}>\r\n      <TextInput\r\n        placeholder=\"Nome do Cliente\"\r\n        value={cliente}\r\n        onChangeText={setCliente}\r\n        style={{ marginBottom: 10, borderBottomWidth: 1 }}\r\n      />\r\n      <TextInput\r\n        placeholder=\"Valor total da venda\"\r\n        value={total}\r\n        onChangeText={setTotal}\r\n        keyboardType=\"numeric\"\r\n        style={{ marginBottom: 10, borderBottomWidth: 1 }}\r\n      />\r\n      <Button title=\"Registrar Venda\" onPress={salvarVenda} />\r\n    </View>\r\n  );\r\n}\r\n"],"mappings":";;AAAA,SAASA,QAAQ,QAAQ,OAAO;AAAC,OAAAC,IAAA;AAAA,OAAAC,SAAA;AAAA,OAAAC,MAAA;AAAA,OAAAC,KAAA;AAEjC,SAASC,QAAQ;AAAiB,SAAAC,GAAA,IAAAC,IAAA,EAAAC,IAAA,IAAAC,KAAA;AAElC,eAAe,SAASC,aAAaA,CAAAC,IAAA,EAAsB;EAAA,IAAnBC,UAAU,GAAAD,IAAA,CAAVC,UAAU;EAChD,IAAAC,SAAA,GAA8Bb,QAAQ,CAAC,EAAE,CAAC;IAAAc,UAAA,GAAAC,cAAA,CAAAF,SAAA;IAAnCG,OAAO,GAAAF,UAAA;IAAEG,UAAU,GAAAH,UAAA;EAC1B,IAAAI,UAAA,GAA0BlB,QAAQ,CAAC,EAAE,CAAC;IAAAmB,UAAA,GAAAJ,cAAA,CAAAG,UAAA;IAA/BE,KAAK,GAAAD,UAAA;IAAEE,QAAQ,GAAAF,UAAA;EAEtB,IAAMG,WAAW;IAAA,IAAAC,KAAA,GAAAC,iBAAA,CAAG,aAAY;MAC9B,IAAI,CAACR,OAAO,IAAI,CAACI,KAAK,EAAE;QACtBhB,KAAK,CAACqB,KAAK,CAAC,SAAS,EAAE,wCAAwC,CAAC;QAChE;MACF;MAEA,IAAI;QACF,MAAMpB,QAAQ,CAAC;UAAEqB,YAAY,EAAEV,OAAO;UAAEI,KAAK,EAAEO,UAAU,CAACP,KAAK;QAAE,CAAC,CAAC;QACnEhB,KAAK,CAACqB,KAAK,CAAC,SAAS,EAAE,+BAA+B,CAAC;QACvDb,UAAU,CAACgB,MAAM,CAAC,CAAC;MACrB,CAAC,CAAC,OAAAC,OAAA,EAAM;QACNzB,KAAK,CAACqB,KAAK,CAAC,MAAM,EAAE,oCAAoC,CAAC;MAC3D;IACF,CAAC;IAAA,gBAbKH,WAAWA,CAAA;MAAA,OAAAC,KAAA,CAAAO,KAAA,OAAAC,SAAA;IAAA;EAAA,GAahB;EAED,OACEtB,KAAA,CAACR,IAAI;IAAC+B,KAAK,EAAE;MAAEC,OAAO,EAAE;IAAG,CAAE;IAAAC,QAAA,GAC3B3B,IAAA,CAACL,SAAS;MACRiC,WAAW,EAAC,iBAAiB;MAC7BC,KAAK,EAAEpB,OAAQ;MACfqB,YAAY,EAAEpB,UAAW;MACzBe,KAAK,EAAE;QAAEM,YAAY,EAAE,EAAE;QAAEC,iBAAiB,EAAE;MAAE;IAAE,CACnD,CAAC,EACFhC,IAAA,CAACL,SAAS;MACRiC,WAAW,EAAC,sBAAsB;MAClCC,KAAK,EAAEhB,KAAM;MACbiB,YAAY,EAAEhB,QAAS;MACvBmB,YAAY,EAAC,SAAS;MACtBR,KAAK,EAAE;QAAEM,YAAY,EAAE,EAAE;QAAEC,iBAAiB,EAAE;MAAE;IAAE,CACnD,CAAC,EACFhC,IAAA,CAACJ,MAAM;MAACsC,KAAK,EAAC,iBAAiB;MAACC,OAAO,EAAEpB;IAAY,CAAE,CAAC;EAAA,CACpD,CAAC;AAEX","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}