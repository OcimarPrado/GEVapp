{"ast":null,"code":"import React from 'react';\nimport { NavigationContainer } from '@react-navigation/native';\nimport { createNativeStackNavigator } from '@react-navigation/native-stack';\nimport SplashScreen from \"../screens/SplashScreen\";\nimport DashboardScreen from \"../screens/DashboardScreen\";\nimport ProductsScreen from \"../screens/ProductsScreen\";\nimport NewProductScreen from \"../screens/NewProductScreen\";\nimport NewSaleScreen from \"../screens/NewSaleScreen\";\nimport SalesHistoryScreen from \"../screens/SalesHistoryScreen\";\nimport ReportsScreen from \"../screens/ReportsScreen\";\nimport { jsx as _jsx, jsxs as _jsxs } from \"react/jsx-runtime\";\nvar Stack = createNativeStackNavigator();\nexport default function AppNavigator() {\n  return _jsx(NavigationContainer, {\n    children: _jsxs(Stack.Navigator, {\n      initialRouteName: \"Splash\",\n      screenOptions: {\n        headerShown: false\n      },\n      children: [_jsx(Stack.Screen, {\n        name: \"Splash\",\n        component: SplashScreen\n      }), _jsx(Stack.Screen, {\n        name: \"Dashboard\",\n        component: DashboardScreen\n      }), _jsx(Stack.Screen, {\n        name: \"Products\",\n        component: ProductsScreen\n      }), _jsx(Stack.Screen, {\n        name: \"NewProduct\",\n        component: NewProductScreen\n      }), _jsx(Stack.Screen, {\n        name: \"NewSale\",\n        component: NewSaleScreen\n      }), _jsx(Stack.Screen, {\n        name: \"SalesHistory\",\n        component: SalesHistoryScreen\n      }), _jsx(Stack.Screen, {\n        name: \"Reports\",\n        component: ReportsScreen\n      })]\n    })\n  });\n}","map":{"version":3,"names":["React","NavigationContainer","createNativeStackNavigator","SplashScreen","DashboardScreen","ProductsScreen","NewProductScreen","NewSaleScreen","SalesHistoryScreen","ReportsScreen","jsx","_jsx","jsxs","_jsxs","Stack","AppNavigator","children","Navigator","initialRouteName","screenOptions","headerShown","Screen","name","component"],"sources":["C:/Users/User/GEVapp/frontend/app/navigation/AppNavigator.tsx"],"sourcesContent":["import React from 'react';\r\nimport { NavigationContainer } from '@react-navigation/native';\r\nimport { createNativeStackNavigator } from '@react-navigation/native-stack';\r\n\r\nimport SplashScreen from '../screens/SplashScreen';\r\nimport DashboardScreen from '../screens/DashboardScreen';\r\nimport ProductsScreen from '../screens/ProductsScreen';\r\nimport NewProductScreen from '../screens/NewProductScreen';\r\nimport NewSaleScreen from '../screens/NewSaleScreen';\r\nimport SalesHistoryScreen from '../screens/SalesHistoryScreen';\r\nimport ReportsScreen from '../screens/ReportsScreen';\r\n\r\nconst Stack = createNativeStackNavigator();\r\n\r\nexport default function AppNavigator() {\r\n  return (\r\n    <NavigationContainer>\r\n      <Stack.Navigator\r\n        initialRouteName=\"Splash\"\r\n        screenOptions={{ headerShown: false }}\r\n      >\r\n        <Stack.Screen name=\"Splash\" component={SplashScreen} />\r\n        <Stack.Screen name=\"Dashboard\" component={DashboardScreen} />\r\n        <Stack.Screen name=\"Products\" component={ProductsScreen} />\r\n        <Stack.Screen name=\"NewProduct\" component={NewProductScreen} />\r\n        <Stack.Screen name=\"NewSale\" component={NewSaleScreen} />\r\n        <Stack.Screen name=\"SalesHistory\" component={SalesHistoryScreen} />\r\n        <Stack.Screen name=\"Reports\" component={ReportsScreen} />\r\n      </Stack.Navigator>\r\n    </NavigationContainer>\r\n  );\r\n}"],"mappings":"AAAA,OAAOA,KAAK,MAAM,OAAO;AACzB,SAASC,mBAAmB,QAAQ,0BAA0B;AAC9D,SAASC,0BAA0B,QAAQ,gCAAgC;AAE3E,OAAOC,YAAY;AACnB,OAAOC,eAAe;AACtB,OAAOC,cAAc;AACrB,OAAOC,gBAAgB;AACvB,OAAOC,aAAa;AACpB,OAAOC,kBAAkB;AACzB,OAAOC,aAAa;AAAiC,SAAAC,GAAA,IAAAC,IAAA,EAAAC,IAAA,IAAAC,KAAA;AAErD,IAAMC,KAAK,GAAGZ,0BAA0B,CAAC,CAAC;AAE1C,eAAe,SAASa,YAAYA,CAAA,EAAG;EACrC,OACEJ,IAAA,CAACV,mBAAmB;IAAAe,QAAA,EAClBH,KAAA,CAACC,KAAK,CAACG,SAAS;MACdC,gBAAgB,EAAC,QAAQ;MACzBC,aAAa,EAAE;QAAEC,WAAW,EAAE;MAAM,CAAE;MAAAJ,QAAA,GAEtCL,IAAA,CAACG,KAAK,CAACO,MAAM;QAACC,IAAI,EAAC,QAAQ;QAACC,SAAS,EAAEpB;MAAa,CAAE,CAAC,EACvDQ,IAAA,CAACG,KAAK,CAACO,MAAM;QAACC,IAAI,EAAC,WAAW;QAACC,SAAS,EAAEnB;MAAgB,CAAE,CAAC,EAC7DO,IAAA,CAACG,KAAK,CAACO,MAAM;QAACC,IAAI,EAAC,UAAU;QAACC,SAAS,EAAElB;MAAe,CAAE,CAAC,EAC3DM,IAAA,CAACG,KAAK,CAACO,MAAM;QAACC,IAAI,EAAC,YAAY;QAACC,SAAS,EAAEjB;MAAiB,CAAE,CAAC,EAC/DK,IAAA,CAACG,KAAK,CAACO,MAAM;QAACC,IAAI,EAAC,SAAS;QAACC,SAAS,EAAEhB;MAAc,CAAE,CAAC,EACzDI,IAAA,CAACG,KAAK,CAACO,MAAM;QAACC,IAAI,EAAC,cAAc;QAACC,SAAS,EAAEf;MAAmB,CAAE,CAAC,EACnEG,IAAA,CAACG,KAAK,CAACO,MAAM;QAACC,IAAI,EAAC,SAAS;QAACC,SAAS,EAAEd;MAAc,CAAE,CAAC;IAAA,CAC1C;EAAC,CACC,CAAC;AAE1B","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}