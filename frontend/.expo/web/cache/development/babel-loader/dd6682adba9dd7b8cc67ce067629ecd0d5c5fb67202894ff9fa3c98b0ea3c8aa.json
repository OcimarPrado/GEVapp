{"ast":null,"code":"import _defineProperty from \"@babel/runtime/helpers/defineProperty\";\nimport _objectWithoutProperties from \"@babel/runtime/helpers/objectWithoutProperties\";\nvar _excluded = [\"style\", \"hideTransitionAnimation\", \"translucent\", \"backgroundColor\"];\nfunction ownKeys(e, r) { var t = Object.keys(e); if (Object.getOwnPropertySymbols) { var o = Object.getOwnPropertySymbols(e); r && (o = o.filter(function (r) { return Object.getOwnPropertyDescriptor(e, r).enumerable; })), t.push.apply(t, o); } return t; }\nfunction _objectSpread(e) { for (var r = 1; r < arguments.length; r++) { var t = null != arguments[r] ? arguments[r] : {}; r % 2 ? ownKeys(Object(t), !0).forEach(function (r) { _defineProperty(e, r, t[r]); }) : Object.getOwnPropertyDescriptors ? Object.defineProperties(e, Object.getOwnPropertyDescriptors(t)) : ownKeys(Object(t)).forEach(function (r) { Object.defineProperty(e, r, Object.getOwnPropertyDescriptor(t, r)); }); } return e; }\nimport React from 'react';\nimport Appearance from \"react-native-web/dist/exports/Appearance\";\nimport NativeStatusBar from \"react-native-web/dist/exports/StatusBar\";\nimport useColorScheme from \"react-native-web/dist/exports/useColorScheme\";\nimport { jsx as _jsx } from \"react/jsx-runtime\";\nexport function StatusBar(_ref) {\n  var style = _ref.style,\n    hideTransitionAnimation = _ref.hideTransitionAnimation,\n    _ref$translucent = _ref.translucent,\n    translucent = _ref$translucent === void 0 ? true : _ref$translucent,\n    backgroundColorProp = _ref.backgroundColor,\n    props = _objectWithoutProperties(_ref, _excluded);\n  var colorScheme = useColorScheme();\n  var barStyle = React.useMemo(function () {\n    return styleToBarStyle(style, colorScheme);\n  }, [style, colorScheme]);\n  var backgroundColor = backgroundColorProp;\n  if (translucent && !backgroundColor) {\n    backgroundColor = 'transparent';\n  }\n  return _jsx(NativeStatusBar, _objectSpread(_objectSpread({}, props), {}, {\n    translucent: translucent,\n    barStyle: barStyle,\n    backgroundColor: backgroundColor,\n    showHideTransition: hideTransitionAnimation === 'none' ? undefined : hideTransitionAnimation\n  }));\n}\nexport function setStatusBarStyle(style, animated) {\n  NativeStatusBar.setBarStyle(styleToBarStyle(style), animated);\n}\nexport function setStatusBarHidden(hidden, animation) {\n  NativeStatusBar.setHidden(hidden, animation);\n}\nexport function setStatusBarBackgroundColor(backgroundColor, animated) {\n  NativeStatusBar.setBackgroundColor(backgroundColor, animated);\n}\nexport function setStatusBarNetworkActivityIndicatorVisible(visible) {\n  NativeStatusBar.setNetworkActivityIndicatorVisible(visible);\n}\nexport function setStatusBarTranslucent(translucent) {\n  NativeStatusBar.setTranslucent(translucent);\n}\nfunction styleToBarStyle() {\n  var _Appearance$getColorS;\n  var style = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : 'auto';\n  var colorScheme = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : (_Appearance$getColorS = Appearance == null ? void 0 : Appearance.getColorScheme()) != null ? _Appearance$getColorS : 'light';\n  if (!colorScheme) {\n    colorScheme = 'light';\n  }\n  var resolvedStyle = style;\n  if (style === 'auto') {\n    resolvedStyle = colorScheme === 'light' ? 'dark' : 'light';\n  } else if (style === 'inverted') {\n    resolvedStyle = colorScheme === 'light' ? 'light' : 'dark';\n  }\n  return resolvedStyle === 'light' ? 'light-content' : 'dark-content';\n}","map":{"version":3,"names":["React","Appearance","NativeStatusBar","useColorScheme","jsx","_jsx","StatusBar","_ref","style","hideTransitionAnimation","_ref$translucent","translucent","backgroundColorProp","backgroundColor","props","_objectWithoutProperties","_excluded","colorScheme","barStyle","useMemo","styleToBarStyle","_objectSpread","showHideTransition","undefined","setStatusBarStyle","animated","setBarStyle","setStatusBarHidden","hidden","animation","setHidden","setStatusBarBackgroundColor","setBackgroundColor","setStatusBarNetworkActivityIndicatorVisible","visible","setNetworkActivityIndicatorVisible","setStatusBarTranslucent","setTranslucent","_Appearance$getColorS","arguments","length","getColorScheme","resolvedStyle"],"sources":["C:/Users/User/GEVapp/frontend/node_modules/expo-status-bar/src/NativeStatusBarWrapper.tsx"],"sourcesContent":["import React from 'react';\nimport {\n  Appearance,\n  StatusBar as NativeStatusBar,\n  useColorScheme,\n  type ColorSchemeName,\n  type ColorValue,\n} from 'react-native';\n\nimport { StatusBarProps, StatusBarStyle, StatusBarAnimation } from './types';\n\n/**\n * A component that allows you to configure your status bar without directly calling imperative\n * methods like `setBarStyle`.\n *\n * You will likely have multiple `StatusBar` components mounted in the same app at the same time.\n * For example, if you have multiple screens in your app, you may end up using one per screen.\n * The props of each `StatusBar` component will be merged in the order that they were mounted.\n * This component is built on top of the [StatusBar](https://reactnative.dev/docs/statusbar)\n * component exported from React Native, and it provides defaults that work better for Expo users.\n */\nexport function StatusBar({\n  style,\n  hideTransitionAnimation,\n  translucent = true,\n  backgroundColor: backgroundColorProp,\n  ...props\n}: StatusBarProps) {\n  // Pick appropriate default value depending on current theme, so if we are\n  // locked to light mode we don't end up with a light status bar\n  const colorScheme = useColorScheme();\n  const barStyle = React.useMemo(() => styleToBarStyle(style, colorScheme), [style, colorScheme]);\n\n  // If translucent and no backgroundColor is provided, then use transparent\n  // background\n  let backgroundColor = backgroundColorProp;\n  if (translucent && !backgroundColor) {\n    backgroundColor = 'transparent';\n  }\n\n  return (\n    <NativeStatusBar\n      {...props}\n      translucent={translucent}\n      barStyle={barStyle}\n      backgroundColor={backgroundColor}\n      showHideTransition={hideTransitionAnimation === 'none' ? undefined : hideTransitionAnimation}\n    />\n  );\n}\n\n// @needsAudit\n/**\n * Set the bar style of the status bar.\n * @param style The color of the status bar text.\n * @param animated If the transition should be animated.\n */\nexport function setStatusBarStyle(style: StatusBarStyle, animated?: boolean) {\n  NativeStatusBar.setBarStyle(styleToBarStyle(style), animated);\n}\n\n// @needsAudit\n/**\n * Toggle visibility of the status bar.\n * @param hidden If the status bar should be hidden.\n * @param animation Animation to use when toggling hidden, defaults to `'none'`.\n */\nexport function setStatusBarHidden(hidden: boolean, animation?: StatusBarAnimation) {\n  NativeStatusBar.setHidden(hidden, animation);\n}\n\n// @needsAudit\n/**\n * Set the background color of the status bar.\n * @param backgroundColor The background color of the status bar.\n * @param animated `true` to animate the background color change, `false` to change immediately.\n * @platform android\n */\nexport function setStatusBarBackgroundColor(backgroundColor: ColorValue, animated?: boolean) {\n  NativeStatusBar.setBackgroundColor(backgroundColor, animated);\n}\n\n// @needsAudit\n/**\n * Toggle visibility of the network activity indicator.\n * @param visible If the network activity indicator should be visible.\n * @platform ios\n */\nexport function setStatusBarNetworkActivityIndicatorVisible(visible: boolean) {\n  NativeStatusBar.setNetworkActivityIndicatorVisible(visible);\n}\n\n// @needsAudit\n/**\n * Set the translucency of the status bar.\n * @param translucent Whether the app can draw under the status bar. When `true`, content will be\n * rendered under the status bar. This is always `true` on iOS and cannot be changed.\n * @platform android\n */\nexport function setStatusBarTranslucent(translucent: boolean) {\n  NativeStatusBar.setTranslucent(translucent);\n}\n\nfunction styleToBarStyle(\n  style: StatusBarStyle = 'auto',\n  colorScheme: ColorSchemeName = Appearance?.getColorScheme() ?? 'light'\n): 'light-content' | 'dark-content' {\n  if (!colorScheme) {\n    colorScheme = 'light';\n  }\n\n  let resolvedStyle = style;\n  if (style === 'auto') {\n    resolvedStyle = colorScheme === 'light' ? 'dark' : 'light';\n  } else if (style === 'inverted') {\n    resolvedStyle = colorScheme === 'light' ? 'light' : 'dark';\n  }\n\n  return resolvedStyle === 'light' ? 'light-content' : 'dark-content';\n}\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}