{"ast":null,"code":"import _asyncToGenerator from \"@babel/runtime/helpers/asyncToGenerator\";\nimport _slicedToArray from \"@babel/runtime/helpers/slicedToArray\";\nimport React, { useState } from 'react';\nimport View from \"react-native-web/dist/exports/View\";\nimport Text from \"react-native-web/dist/exports/Text\";\nimport TextInput from \"react-native-web/dist/exports/TextInput\";\nimport TouchableOpacity from \"react-native-web/dist/exports/TouchableOpacity\";\nimport StyleSheet from \"react-native-web/dist/exports/StyleSheet\";\nimport Alert from \"react-native-web/dist/exports/Alert\";\nimport { jsx as _jsx, jsxs as _jsxs } from \"react/jsx-runtime\";\nexport default function RegisterScreen(_ref) {\n  var navigation = _ref.navigation;\n  var _useState = useState(''),\n    _useState2 = _slicedToArray(_useState, 2),\n    name = _useState2[0],\n    setName = _useState2[1];\n  var _useState3 = useState(''),\n    _useState4 = _slicedToArray(_useState3, 2),\n    email = _useState4[0],\n    setEmail = _useState4[1];\n  var _useState5 = useState(''),\n    _useState6 = _slicedToArray(_useState5, 2),\n    password = _useState6[0],\n    setPassword = _useState6[1];\n  var handleRegister = function () {\n    var _ref2 = _asyncToGenerator(function* () {\n      if (!name || !email || !password) {\n        Alert.alert('Erro', 'Preencha todos os campos');\n        return;\n      }\n      try {\n        var response = yield fetch('http://10.0.2.2:3000/api/register', {\n          method: 'POST',\n          headers: {\n            'Content-Type': 'application/json'\n          },\n          body: JSON.stringify({\n            nome: name,\n            email: email,\n            senha: password\n          })\n        });\n        var data = yield response.json();\n        if (data.success) {\n          Alert.alert('Sucesso', 'Cadastro realizado!');\n          navigation.replace('Dashboard');\n        } else {\n          Alert.alert('Erro', data.error || 'Falha no cadastro');\n        }\n      } catch (error) {\n        Alert.alert('Erro', 'Não foi possível conectar ao servidor');\n      }\n    });\n    return function handleRegister() {\n      return _ref2.apply(this, arguments);\n    };\n  }();\n  return _jsxs(View, {\n    style: styles.container,\n    children: [_jsx(Text, {\n      style: styles.title,\n      children: \"Cadastro\"\n    }), _jsx(TextInput, {\n      style: styles.input,\n      placeholder: \"Nome\",\n      value: name,\n      onChangeText: setName\n    }), _jsx(TextInput, {\n      style: styles.input,\n      placeholder: \"Email\",\n      value: email,\n      onChangeText: setEmail\n    }), _jsx(TextInput, {\n      style: styles.input,\n      placeholder: \"Senha\",\n      secureTextEntry: true,\n      value: password,\n      onChangeText: setPassword\n    }), _jsx(TouchableOpacity, {\n      style: styles.button,\n      onPress: handleRegister,\n      children: _jsx(Text, {\n        style: styles.buttonText,\n        children: \"Cadastrar\"\n      })\n    }), _jsx(TouchableOpacity, {\n      onPress: function onPress() {\n        return navigation.goBack();\n      },\n      children: _jsx(Text, {\n        style: styles.linkText,\n        children: \"J\\xE1 tem uma conta? Fa\\xE7a login\"\n      })\n    })]\n  });\n}\nvar styles = StyleSheet.create({\n  container: {\n    flex: 1,\n    justifyContent: 'center',\n    alignItems: 'center',\n    padding: 20\n  },\n  title: {\n    fontSize: 32,\n    fontWeight: 'bold',\n    marginBottom: 20,\n    color: '#2196F3'\n  },\n  input: {\n    width: '100%',\n    padding: 15,\n    borderWidth: 1,\n    borderColor: '#ccc',\n    borderRadius: 8,\n    marginBottom: 15\n  },\n  button: {\n    backgroundColor: '#2196F3',\n    padding: 15,\n    borderRadius: 8,\n    width: '100%',\n    alignItems: 'center'\n  },\n  buttonText: {\n    color: 'white',\n    fontWeight: 'bold'\n  },\n  linkText: {\n    marginTop: 15,\n    color: '#2196F3',\n    textDecorationLine: 'underline'\n  }\n});","map":{"version":3,"names":["React","useState","View","Text","TextInput","TouchableOpacity","StyleSheet","Alert","jsx","_jsx","jsxs","_jsxs","RegisterScreen","_ref","navigation","_useState","_useState2","_slicedToArray","name","setName","_useState3","_useState4","email","setEmail","_useState5","_useState6","password","setPassword","handleRegister","_ref2","_asyncToGenerator","alert","response","fetch","method","headers","body","JSON","stringify","nome","senha","data","json","success","replace","error","apply","arguments","style","styles","container","children","title","input","placeholder","value","onChangeText","secureTextEntry","button","onPress","buttonText","goBack","linkText","create","flex","justifyContent","alignItems","padding","fontSize","fontWeight","marginBottom","color","width","borderWidth","borderColor","borderRadius","backgroundColor","marginTop","textDecorationLine"],"sources":["C:/Users/User/GEVapp/frontend/app/screens/RegisterScreen.tsx"],"sourcesContent":["import React, { useState } from 'react';\r\nimport { View, Text, TextInput, TouchableOpacity, StyleSheet, Alert } from 'react-native';\r\n\r\nexport default function RegisterScreen({ navigation }: any) {\r\n  const [name, setName] = useState('');\r\n  const [email, setEmail] = useState('');\r\n  const [password, setPassword] = useState('');\r\n\r\n  const handleRegister = async () => {\r\n  if (!name || !email || !password) {\r\n    Alert.alert('Erro', 'Preencha todos os campos');\r\n    return;\r\n  }\r\n\r\n  try {\r\n    const response = await fetch('http://10.0.2.2:3000/api/register', {\r\n      method: 'POST',\r\n      headers: { 'Content-Type': 'application/json' },\r\n      body: JSON.stringify({ nome: name, email, senha: password }) // <-- CORRIGIDO\r\n    });\r\n\r\n    const data = await response.json();\r\n\r\n    if (data.success) {\r\n      Alert.alert('Sucesso', 'Cadastro realizado!');\r\n      navigation.replace('Dashboard');\r\n    } else {\r\n      Alert.alert('Erro', data.error || 'Falha no cadastro');\r\n    }\r\n  } catch (error) {\r\n    Alert.alert('Erro', 'Não foi possível conectar ao servidor');\r\n  }\r\n};\r\n\r\n\r\n  return (\r\n    <View style={styles.container}>\r\n      <Text style={styles.title}>Cadastro</Text>\r\n      <TextInput\r\n        style={styles.input}\r\n        placeholder=\"Nome\"\r\n        value={name}\r\n        onChangeText={setName}\r\n      />\r\n      <TextInput\r\n        style={styles.input}\r\n        placeholder=\"Email\"\r\n        value={email}\r\n        onChangeText={setEmail}\r\n      />\r\n      <TextInput\r\n        style={styles.input}\r\n        placeholder=\"Senha\"\r\n        secureTextEntry\r\n        value={password}\r\n        onChangeText={setPassword}\r\n      />\r\n      <TouchableOpacity style={styles.button} onPress={handleRegister}>\r\n        <Text style={styles.buttonText}>Cadastrar</Text>\r\n      </TouchableOpacity>\r\n      <TouchableOpacity onPress={() => navigation.goBack()}>\r\n        <Text style={styles.linkText}>Já tem uma conta? Faça login</Text>\r\n      </TouchableOpacity>\r\n    </View>\r\n  );\r\n}\r\n\r\nconst styles = StyleSheet.create({\r\n  container: { flex: 1, justifyContent: 'center', alignItems: 'center', padding: 20 },\r\n  title: { fontSize: 32, fontWeight: 'bold', marginBottom: 20, color: '#2196F3' },\r\n  input: { width: '100%', padding: 15, borderWidth: 1, borderColor: '#ccc', borderRadius: 8, marginBottom: 15 },\r\n  button: { backgroundColor: '#2196F3', padding: 15, borderRadius: 8, width: '100%', alignItems: 'center' },\r\n  buttonText: { color: 'white', fontWeight: 'bold' },\r\n  linkText: { marginTop: 15, color: '#2196F3', textDecorationLine: 'underline' },\r\n});\r\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}