{"ast":null,"code":"import _asyncToGenerator from \"@babel/runtime/helpers/asyncToGenerator\";\nimport _slicedToArray from \"@babel/runtime/helpers/slicedToArray\";\nimport React, { useState } from 'react';\nimport View from \"react-native-web/dist/exports/View\";\nimport Text from \"react-native-web/dist/exports/Text\";\nimport StyleSheet from \"react-native-web/dist/exports/StyleSheet\";\nimport ScrollView from \"react-native-web/dist/exports/ScrollView\";\nimport TouchableOpacity from \"react-native-web/dist/exports/TouchableOpacity\";\nimport ActivityIndicator from \"react-native-web/dist/exports/ActivityIndicator\";\nimport Alert from \"react-native-web/dist/exports/Alert\";\nimport Dimensions from \"react-native-web/dist/exports/Dimensions\";\nimport { useFocusEffect } from '@react-navigation/native';\nimport { BarChart } from 'react-native-chart-kit';\nimport { jsx as _jsx, jsxs as _jsxs } from \"react/jsx-runtime\";\nexport default function DashboardScreen(_ref) {\n  var navigation = _ref.navigation;\n  var _useState = useState({\n      vendas_mes: 0,\n      total_produtos: 0,\n      lucro_mes: 0,\n      vendas_pendentes: 0\n    }),\n    _useState2 = _slicedToArray(_useState, 2),\n    data = _useState2[0],\n    setData = _useState2[1];\n  var _useState3 = useState(true),\n    _useState4 = _slicedToArray(_useState3, 2),\n    loading = _useState4[0],\n    setLoading = _useState4[1];\n  var loadDashboardData = function () {\n    var _ref2 = _asyncToGenerator(function* () {\n      try {\n        setLoading(true);\n        var response = yield fetch('http://localhost:3000/api/dashboard/summary');\n        if (!response.ok) throw new Error(\"HTTP \" + response.status + \": \" + response.statusText);\n        var result = yield response.json();\n        setData({\n          vendas_mes: result.vendasMes || 0,\n          total_produtos: result.produtos || 0,\n          lucro_mes: result.lucroMes || 0,\n          vendas_pendentes: result.pendentes || 0\n        });\n      } catch (error) {\n        console.error('Erro ao carregar dashboard:', error);\n        Alert.alert('Erro', 'Não foi possível carregar os dados do dashboard.\\n' + error.message);\n      } finally {\n        setLoading(false);\n      }\n    });\n    return function loadDashboardData() {\n      return _ref2.apply(this, arguments);\n    };\n  }();\n  useFocusEffect(React.useCallback(function () {\n    loadDashboardData();\n  }, []));\n  var formatCurrency = function formatCurrency(value) {\n    return new Intl.NumberFormat('pt-BR', {\n      style: 'currency',\n      currency: 'BRL'\n    }).format(value);\n  };\n  if (loading) {\n    return _jsxs(View, {\n      style: styles.loadingContainer,\n      children: [_jsx(ActivityIndicator, {\n        size: \"large\",\n        color: \"#2196F3\"\n      }), _jsx(Text, {\n        style: styles.loadingText,\n        children: \"Carregando dashboard...\"\n      })]\n    });\n  }\n  return _jsxs(ScrollView, {\n    style: styles.container,\n    children: [_jsxs(View, {\n      style: styles.header,\n      children: [_jsx(Text, {\n        style: styles.title,\n        children: \"GEV App\"\n      }), _jsx(Text, {\n        style: styles.subtitle,\n        children: \"Gest\\xE3o Empresarial de Vendas\"\n      })]\n    }), _jsxs(View, {\n      style: styles.cardsContainer,\n      children: [_jsxs(View, {\n        style: styles.row,\n        children: [_jsxs(View, {\n          style: [styles.card, styles.cardPrimary],\n          children: [_jsx(Text, {\n            style: styles.cardValue,\n            children: formatCurrency(data.vendas_mes)\n          }), _jsx(Text, {\n            style: styles.cardLabel,\n            children: \"Vendas do M\\xEAs\"\n          })]\n        }), _jsxs(View, {\n          style: [styles.card, styles.cardSuccess],\n          children: [_jsx(Text, {\n            style: styles.cardValue,\n            children: formatCurrency(data.lucro_mes)\n          }), _jsx(Text, {\n            style: styles.cardLabel,\n            children: \"Lucro do M\\xEAs\"\n          })]\n        })]\n      }), _jsxs(View, {\n        style: styles.row,\n        children: [_jsxs(View, {\n          style: [styles.card, styles.cardInfo],\n          children: [_jsx(Text, {\n            style: styles.cardValue,\n            children: data.total_produtos\n          }), _jsx(Text, {\n            style: styles.cardLabel,\n            children: \"Produtos Cadastrados\"\n          })]\n        }), _jsxs(View, {\n          style: [styles.card, styles.cardWarning],\n          children: [_jsx(Text, {\n            style: styles.cardValue,\n            children: data.vendas_pendentes\n          }), _jsx(Text, {\n            style: styles.cardLabel,\n            children: \"Vendas Pendentes\"\n          })]\n        })]\n      })]\n    }), _jsxs(View, {\n      style: styles.chartContainer,\n      children: [_jsx(Text, {\n        style: styles.chartTitle,\n        children: \"Vendas vs Lucro\"\n      }), _jsx(BarChart, {\n        data: {\n          labels: ['Vendas', 'Lucro'],\n          datasets: [{\n            data: [data.vendas_mes, data.lucro_mes]\n          }]\n        },\n        width: Dimensions.get('window').width - 40,\n        height: 220,\n        fromZero: true,\n        chartConfig: {\n          backgroundGradientFrom: '#fff',\n          backgroundGradientTo: '#fff',\n          decimalPlaces: 2,\n          color: function color() {\n            var opacity = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : 1;\n            return \"rgba(33, 150, 243, \" + opacity + \")\";\n          },\n          labelColor: function labelColor() {\n            var opacity = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : 1;\n            return \"rgba(0,0,0,\" + opacity + \")\";\n          }\n        },\n        style: {\n          borderRadius: 12\n        }\n      })]\n    }), _jsx(View, {\n      style: styles.refreshContainer,\n      children: _jsx(TouchableOpacity, {\n        style: styles.refreshButton,\n        onPress: loadDashboardData,\n        children: _jsx(Text, {\n          style: styles.refreshButtonText,\n          children: \"\\uD83D\\uDD04 Recarregar Dados\"\n        })\n      })\n    })]\n  });\n}\nvar styles = StyleSheet.create({\n  container: {\n    flex: 1,\n    backgroundColor: '#f5f5f5'\n  },\n  loadingContainer: {\n    flex: 1,\n    justifyContent: 'center',\n    alignItems: 'center',\n    backgroundColor: '#f5f5f5'\n  },\n  loadingText: {\n    marginTop: 10,\n    color: '#666',\n    fontSize: 16\n  },\n  header: {\n    backgroundColor: '#2196F3',\n    paddingVertical: 30,\n    alignItems: 'center'\n  },\n  title: {\n    fontSize: 28,\n    fontWeight: 'bold',\n    color: 'white'\n  },\n  subtitle: {\n    fontSize: 16,\n    color: 'white',\n    opacity: 0.9\n  },\n  cardsContainer: {\n    padding: 20\n  },\n  row: {\n    flexDirection: 'row',\n    justifyContent: 'space-between',\n    marginBottom: 15\n  },\n  card: {\n    width: '48%',\n    padding: 20,\n    borderRadius: 12,\n    elevation: 3,\n    shadowColor: '#000',\n    shadowOffset: {\n      width: 0,\n      height: 2\n    },\n    shadowOpacity: 0.1,\n    shadowRadius: 4\n  },\n  cardPrimary: {\n    backgroundColor: '#2196F3'\n  },\n  cardSuccess: {\n    backgroundColor: '#4CAF50'\n  },\n  cardInfo: {\n    backgroundColor: '#FF9800'\n  },\n  cardWarning: {\n    backgroundColor: '#F44336'\n  },\n  cardValue: {\n    fontSize: 18,\n    fontWeight: 'bold',\n    color: 'white',\n    marginBottom: 5\n  },\n  cardLabel: {\n    fontSize: 12,\n    color: 'white',\n    opacity: 0.9\n  },\n  chartContainer: {\n    paddingHorizontal: 20,\n    marginTop: 10,\n    marginBottom: 20\n  },\n  chartTitle: {\n    fontSize: 16,\n    fontWeight: 'bold',\n    marginBottom: 10,\n    textAlign: 'center'\n  },\n  refreshContainer: {\n    paddingHorizontal: 20,\n    marginBottom: 20\n  },\n  refreshButton: {\n    padding: 12,\n    backgroundColor: '#2196F3',\n    borderRadius: 8,\n    alignItems: 'center'\n  },\n  refreshButtonText: {\n    color: '#fff',\n    fontWeight: 'bold'\n  }\n});","map":{"version":3,"names":["React","useState","View","Text","StyleSheet","ScrollView","TouchableOpacity","ActivityIndicator","Alert","Dimensions","useFocusEffect","BarChart","jsx","_jsx","jsxs","_jsxs","DashboardScreen","_ref","navigation","_useState","vendas_mes","total_produtos","lucro_mes","vendas_pendentes","_useState2","_slicedToArray","data","setData","_useState3","_useState4","loading","setLoading","loadDashboardData","_ref2","_asyncToGenerator","response","fetch","ok","Error","status","statusText","result","json","vendasMes","produtos","lucroMes","pendentes","error","console","alert","message","apply","arguments","useCallback","formatCurrency","value","Intl","NumberFormat","style","currency","format","styles","loadingContainer","children","size","color","loadingText","container","header","title","subtitle","cardsContainer","row","card","cardPrimary","cardValue","cardLabel","cardSuccess","cardInfo","cardWarning","chartContainer","chartTitle","labels","datasets","width","get","height","fromZero","chartConfig","backgroundGradientFrom","backgroundGradientTo","decimalPlaces","opacity","length","undefined","labelColor","borderRadius","refreshContainer","refreshButton","onPress","refreshButtonText","create","flex","backgroundColor","justifyContent","alignItems","marginTop","fontSize","paddingVertical","fontWeight","padding","flexDirection","marginBottom","elevation","shadowColor","shadowOffset","shadowOpacity","shadowRadius","paddingHorizontal","textAlign"],"sources":["C:/Users/User/GEVapp/frontend/app/screens/DashboardScreen.tsx"],"sourcesContent":["import React, { useState, useEffect } from 'react';\r\nimport { View, Text, StyleSheet, ScrollView, TouchableOpacity, ActivityIndicator, Alert, Dimensions } from 'react-native';\r\nimport { useFocusEffect } from '@react-navigation/native';\r\nimport { BarChart } from 'react-native-chart-kit';\r\n\r\ninterface DashboardData {\r\n  vendas_mes: number;\r\n  total_produtos: number;\r\n  lucro_mes: number;\r\n  vendas_pendentes: number;\r\n}\r\n\r\nexport default function DashboardScreen({ navigation }: any) {\r\n  const [data, setData] = useState<DashboardData>({\r\n    vendas_mes: 0,\r\n    total_produtos: 0,\r\n    lucro_mes: 0,\r\n    vendas_pendentes: 0,\r\n  });\r\n  const [loading, setLoading] = useState(true);\r\n\r\n  const loadDashboardData = async () => {\r\n    try {\r\n      setLoading(true);\r\n      const response = await fetch('http://localhost:3000/api/dashboard/summary');\r\n      if (!response.ok) throw new Error(`HTTP ${response.status}: ${response.statusText}`);\r\n      const result = await response.json();\r\n\r\n      setData({\r\n        vendas_mes: result.vendasMes || 0,\r\n        total_produtos: result.produtos || 0,\r\n        lucro_mes: result.lucroMes || 0,\r\n        vendas_pendentes: result.pendentes || 0,\r\n      });\r\n    } catch (error: any) {\r\n      console.error('Erro ao carregar dashboard:', error);\r\n      Alert.alert('Erro', 'Não foi possível carregar os dados do dashboard.\\n' + error.message);\r\n    } finally {\r\n      setLoading(false);\r\n    }\r\n  };\r\n\r\n  useFocusEffect(\r\n    React.useCallback(() => {\r\n      loadDashboardData();\r\n    }, [])\r\n  );\r\n\r\n  const formatCurrency = (value: number) =>\r\n    new Intl.NumberFormat('pt-BR', { style: 'currency', currency: 'BRL' }).format(value);\r\n\r\n  if (loading) {\r\n    return (\r\n      <View style={styles.loadingContainer}>\r\n        <ActivityIndicator size=\"large\" color=\"#2196F3\" />\r\n        <Text style={styles.loadingText}>Carregando dashboard...</Text>\r\n      </View>\r\n    );\r\n  }\r\n\r\n  return (\r\n    <ScrollView style={styles.container}>\r\n      {/* Header */}\r\n      <View style={styles.header}>\r\n        <Text style={styles.title}>GEV App</Text>\r\n        <Text style={styles.subtitle}>Gestão Empresarial de Vendas</Text>\r\n      </View>\r\n\r\n      {/* Cards de métricas */}\r\n      <View style={styles.cardsContainer}>\r\n        <View style={styles.row}>\r\n          <View style={[styles.card, styles.cardPrimary]}>\r\n            <Text style={styles.cardValue}>{formatCurrency(data.vendas_mes)}</Text>\r\n            <Text style={styles.cardLabel}>Vendas do Mês</Text>\r\n          </View>\r\n\r\n          <View style={[styles.card, styles.cardSuccess]}>\r\n            <Text style={styles.cardValue}>{formatCurrency(data.lucro_mes)}</Text>\r\n            <Text style={styles.cardLabel}>Lucro do Mês</Text>\r\n          </View>\r\n        </View>\r\n\r\n        <View style={styles.row}>\r\n          <View style={[styles.card, styles.cardInfo]}>\r\n            <Text style={styles.cardValue}>{data.total_produtos}</Text>\r\n            <Text style={styles.cardLabel}>Produtos Cadastrados</Text>\r\n          </View>\r\n\r\n          <View style={[styles.card, styles.cardWarning]}>\r\n            <Text style={styles.cardValue}>{data.vendas_pendentes}</Text>\r\n            <Text style={styles.cardLabel}>Vendas Pendentes</Text>\r\n          </View>\r\n        </View>\r\n      </View>\r\n\r\n      {/* Gráfico Vendas vs Lucro */}\r\n      <View style={styles.chartContainer}>\r\n        <Text style={styles.chartTitle}>Vendas vs Lucro</Text>\r\n        <BarChart\r\n          data={{\r\n            labels: ['Vendas', 'Lucro'],\r\n            datasets: [{ data: [data.vendas_mes, data.lucro_mes] }],\r\n          }}\r\n          width={Dimensions.get('window').width - 40}\r\n          height={220}\r\n          fromZero\r\n          chartConfig={{\r\n            backgroundGradientFrom: '#fff',\r\n            backgroundGradientTo: '#fff',\r\n            decimalPlaces: 2,\r\n            color: (opacity = 1) => `rgba(33, 150, 243, ${opacity})`,\r\n            labelColor: (opacity = 1) => `rgba(0,0,0,${opacity})`,\r\n          }}\r\n          style={{ borderRadius: 12 }}\r\n        />\r\n      </View>\r\n\r\n      {/* Botão refresh */}\r\n      <View style={styles.refreshContainer}>\r\n        <TouchableOpacity style={styles.refreshButton} onPress={loadDashboardData}>\r\n          <Text style={styles.refreshButtonText}>🔄 Recarregar Dados</Text>\r\n        </TouchableOpacity>\r\n      </View>\r\n    </ScrollView>\r\n  );\r\n}\r\n\r\nconst styles = StyleSheet.create({\r\n  container: { flex: 1, backgroundColor: '#f5f5f5' },\r\n  loadingContainer: { flex: 1, justifyContent: 'center', alignItems: 'center', backgroundColor: '#f5f5f5' },\r\n  loadingText: { marginTop: 10, color: '#666', fontSize: 16 },\r\n  header: { backgroundColor: '#2196F3', paddingVertical: 30, alignItems: 'center' },\r\n  title: { fontSize: 28, fontWeight: 'bold', color: 'white' },\r\n  subtitle: { fontSize: 16, color: 'white', opacity: 0.9 },\r\n  cardsContainer: { padding: 20 },\r\n  row: { flexDirection: 'row', justifyContent: 'space-between', marginBottom: 15 },\r\n  card: { width: '48%', padding: 20, borderRadius: 12, elevation: 3, shadowColor: '#000', shadowOffset: { width: 0, height: 2 }, shadowOpacity: 0.1, shadowRadius: 4 },\r\n  cardPrimary: { backgroundColor: '#2196F3' },\r\n  cardSuccess: { backgroundColor: '#4CAF50' },\r\n  cardInfo: { backgroundColor: '#FF9800' },\r\n  cardWarning: { backgroundColor: '#F44336' },\r\n  cardValue: { fontSize: 18, fontWeight: 'bold', color: 'white', marginBottom: 5 },\r\n  cardLabel: { fontSize: 12, color: 'white', opacity: 0.9 },\r\n  chartContainer: { paddingHorizontal: 20, marginTop: 10, marginBottom: 20 },\r\n  chartTitle: { fontSize: 16, fontWeight: 'bold', marginBottom: 10, textAlign: 'center' },\r\n  refreshContainer: { paddingHorizontal: 20, marginBottom: 20 },\r\n  refreshButton: { padding: 12, backgroundColor: '#2196F3', borderRadius: 8, alignItems: 'center' },\r\n  refreshButtonText: { color: '#fff', fontWeight: 'bold' },\r\n});\r\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}