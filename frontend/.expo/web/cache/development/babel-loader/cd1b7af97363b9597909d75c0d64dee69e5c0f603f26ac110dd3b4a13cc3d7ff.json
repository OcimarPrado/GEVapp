{"ast":null,"code":"import _asyncToGenerator from \"@babel/runtime/helpers/asyncToGenerator\";\nimport _slicedToArray from \"@babel/runtime/helpers/slicedToArray\";\nimport React, { useState } from 'react';\nimport View from \"react-native-web/dist/exports/View\";\nimport Text from \"react-native-web/dist/exports/Text\";\nimport TextInput from \"react-native-web/dist/exports/TextInput\";\nimport TouchableOpacity from \"react-native-web/dist/exports/TouchableOpacity\";\nimport StyleSheet from \"react-native-web/dist/exports/StyleSheet\";\nimport Alert from \"react-native-web/dist/exports/Alert\";\nimport ActivityIndicator from \"react-native-web/dist/exports/ActivityIndicator\";\nimport { jsx as _jsx, jsxs as _jsxs } from \"react/jsx-runtime\";\nexport default function LoginScreen(_ref) {\n  var navigation = _ref.navigation;\n  var _useState = useState(''),\n    _useState2 = _slicedToArray(_useState, 2),\n    email = _useState2[0],\n    setEmail = _useState2[1];\n  var _useState3 = useState(''),\n    _useState4 = _slicedToArray(_useState3, 2),\n    password = _useState4[0],\n    setPassword = _useState4[1];\n  var _useState5 = useState(false),\n    _useState6 = _slicedToArray(_useState5, 2),\n    loading = _useState6[0],\n    setLoading = _useState6[1];\n  var handleLogin = function () {\n    var _ref2 = _asyncToGenerator(function* () {\n      if (!email || !password) {\n        Alert.alert('Erro', 'Preencha todos os campos');\n        return;\n      }\n      setLoading(true);\n      try {\n        var response = yield fetch('http://localhost:3000/api/login', {\n          method: 'POST',\n          headers: {\n            'Content-Type': 'application/json'\n          },\n          body: JSON.stringify({\n            email: email.trim().toLowerCase(),\n            senha: password\n          })\n        });\n        var data = yield response.json();\n        console.log(\"ðŸ“© Resposta do backend:\", data);\n        if (data.success) {\n          Alert.alert('âœ… Sucesso', \"Bem-vindo, \" + data.nome + \"!\");\n          setEmail('');\n          setPassword('');\n          navigation.replace('Dashboard');\n        } else {\n          Alert.alert('Erro', data.error || 'Falha no login');\n        }\n      } catch (error) {\n        console.error(\"ðŸš¨ Erro de conexÃ£o:\", error);\n        Alert.alert('Erro', 'NÃ£o foi possÃ­vel conectar ao servidor');\n      } finally {\n        setLoading(false);\n      }\n    });\n    return function handleLogin() {\n      return _ref2.apply(this, arguments);\n    };\n  }();\n  return _jsxs(View, {\n    style: styles.container,\n    children: [_jsx(Text, {\n      style: styles.title,\n      children: \"Login\"\n    }), _jsx(TextInput, {\n      style: styles.input,\n      placeholder: \"Email\",\n      keyboardType: \"email-address\",\n      autoCapitalize: \"none\",\n      value: email,\n      onChangeText: setEmail\n    }), _jsx(TextInput, {\n      style: styles.input,\n      placeholder: \"Senha\",\n      secureTextEntry: true,\n      value: password,\n      onChangeText: setPassword\n    }), _jsx(TouchableOpacity, {\n      style: styles.button,\n      onPress: handleLogin,\n      disabled: loading,\n      children: loading ? _jsx(ActivityIndicator, {\n        color: \"#fff\"\n      }) : _jsx(Text, {\n        style: styles.buttonText,\n        children: \"Entrar\"\n      })\n    }), _jsx(TouchableOpacity, {\n      onPress: function onPress() {\n        return navigation.navigate('Register');\n      },\n      children: _jsx(Text, {\n        style: styles.linkText,\n        children: \"N\\xE3o tem uma conta? Cadastre-se\"\n      })\n    }), _jsx(TouchableOpacity, {\n      onPress: function onPress() {\n        return navigation.navigate('ForgotPassword');\n      },\n      children: _jsx(Text, {\n        style: styles.linkText,\n        children: \"Esqueceu a senha?\"\n      })\n    })]\n  });\n}\nvar styles = StyleSheet.create({\n  container: {\n    flex: 1,\n    justifyContent: 'center',\n    alignItems: 'center',\n    padding: 20,\n    backgroundColor: '#f9f9f9'\n  },\n  title: {\n    fontSize: 28,\n    fontWeight: 'bold',\n    marginBottom: 25,\n    color: '#2196F3'\n  },\n  input: {\n    width: '100%',\n    padding: 14,\n    borderWidth: 1,\n    borderColor: '#ccc',\n    borderRadius: 8,\n    marginBottom: 15,\n    backgroundColor: '#fff'\n  },\n  button: {\n    backgroundColor: '#2196F3',\n    padding: 15,\n    borderRadius: 8,\n    width: '100%',\n    alignItems: 'center'\n  },\n  buttonText: {\n    color: 'white',\n    fontWeight: 'bold',\n    fontSize: 16\n  },\n  linkText: {\n    marginTop: 15,\n    color: '#2196F3',\n    textDecorationLine: 'underline'\n  }\n});","map":{"version":3,"names":["React","useState","View","Text","TextInput","TouchableOpacity","StyleSheet","Alert","ActivityIndicator","jsx","_jsx","jsxs","_jsxs","LoginScreen","_ref","navigation","_useState","_useState2","_slicedToArray","email","setEmail","_useState3","_useState4","password","setPassword","_useState5","_useState6","loading","setLoading","handleLogin","_ref2","_asyncToGenerator","alert","response","fetch","method","headers","body","JSON","stringify","trim","toLowerCase","senha","data","json","console","log","success","nome","replace","error","apply","arguments","style","styles","container","children","title","input","placeholder","keyboardType","autoCapitalize","value","onChangeText","secureTextEntry","button","onPress","disabled","color","buttonText","navigate","linkText","create","flex","justifyContent","alignItems","padding","backgroundColor","fontSize","fontWeight","marginBottom","width","borderWidth","borderColor","borderRadius","marginTop","textDecorationLine"],"sources":["C:/Users/User/GEVapp/frontend/app/screens/LoginScreen.tsx"],"sourcesContent":["import React, { useState } from 'react';\r\nimport { View, Text, TextInput, TouchableOpacity, StyleSheet, Alert, ActivityIndicator } from 'react-native';\r\n\r\nexport default function LoginScreen({ navigation }: any) {\r\n  const [email, setEmail] = useState('');\r\n  const [password, setPassword] = useState('');\r\n  const [loading, setLoading] = useState(false);\r\n\r\n const handleLogin = async () => {\r\n  if (!email || !password) {\r\n    Alert.alert('Erro', 'Preencha todos os campos');\r\n    return;\r\n  }\r\n\r\n  setLoading(true);\r\n\r\n  try {\r\n    const response = await fetch('http://localhost:3000/api/login', {\r\n      method: 'POST',\r\n      headers: { 'Content-Type': 'application/json' },\r\n      body: JSON.stringify({ email: email.trim().toLowerCase(), senha: password })\r\n    });\r\n\r\n    const data = await response.json();\r\n    console.log(\"ðŸ“© Resposta do backend:\", data);\r\n\r\n    if (data.success) {\r\n      Alert.alert('âœ… Sucesso', `Bem-vindo, ${data.nome}!`);\r\n      setEmail('');\r\n      setPassword('');\r\n      navigation.replace('Dashboard');\r\n    } else {\r\n      Alert.alert('Erro', data.error || 'Falha no login');\r\n    }\r\n  } catch (error) {\r\n    console.error(\"ðŸš¨ Erro de conexÃ£o:\", error);\r\n    Alert.alert('Erro', 'NÃ£o foi possÃ­vel conectar ao servidor');\r\n  } finally {\r\n    setLoading(false);\r\n  }\r\n};\r\n\r\n\r\n  return (\r\n    <View style={styles.container}>\r\n      <Text style={styles.title}>Login</Text>\r\n\r\n      <TextInput\r\n        style={styles.input}\r\n        placeholder=\"Email\"\r\n        keyboardType=\"email-address\"\r\n        autoCapitalize=\"none\"\r\n        value={email}\r\n        onChangeText={setEmail}\r\n      />\r\n\r\n      <TextInput\r\n        style={styles.input}\r\n        placeholder=\"Senha\"\r\n        secureTextEntry\r\n        value={password}\r\n        onChangeText={setPassword}\r\n      />\r\n\r\n      <TouchableOpacity style={styles.button} onPress={handleLogin} disabled={loading}>\r\n        {loading ? <ActivityIndicator color=\"#fff\" /> : <Text style={styles.buttonText}>Entrar</Text>}\r\n      </TouchableOpacity>\r\n\r\n      <TouchableOpacity onPress={() => navigation.navigate('Register')}>\r\n        <Text style={styles.linkText}>NÃ£o tem uma conta? Cadastre-se</Text>\r\n      </TouchableOpacity>\r\n\r\n      <TouchableOpacity onPress={() => navigation.navigate('ForgotPassword')}>\r\n        <Text style={styles.linkText}>Esqueceu a senha?</Text>\r\n      </TouchableOpacity>\r\n    </View>\r\n  );\r\n}\r\n\r\nconst styles = StyleSheet.create({\r\n  container: { flex: 1, justifyContent: 'center', alignItems: 'center', padding: 20, backgroundColor: '#f9f9f9' },\r\n  title: { fontSize: 28, fontWeight: 'bold', marginBottom: 25, color: '#2196F3' },\r\n  input: { width: '100%', padding: 14, borderWidth: 1, borderColor: '#ccc', borderRadius: 8, marginBottom: 15, backgroundColor: '#fff' },\r\n  button: { backgroundColor: '#2196F3', padding: 15, borderRadius: 8, width: '100%', alignItems: 'center' },\r\n  buttonText: { color: 'white', fontWeight: 'bold', fontSize: 16 },\r\n  linkText: { marginTop: 15, color: '#2196F3', textDecorationLine: 'underline' },\r\n});\r\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}