{"ast":null,"code":"import _asyncToGenerator from \"@babel/runtime/helpers/asyncToGenerator\";\nimport _slicedToArray from \"@babel/runtime/helpers/slicedToArray\";\nimport React, { useState } from 'react';\nimport View from \"react-native-web/dist/exports/View\";\nimport Text from \"react-native-web/dist/exports/Text\";\nimport StyleSheet from \"react-native-web/dist/exports/StyleSheet\";\nimport ScrollView from \"react-native-web/dist/exports/ScrollView\";\nimport TouchableOpacity from \"react-native-web/dist/exports/TouchableOpacity\";\nimport ActivityIndicator from \"react-native-web/dist/exports/ActivityIndicator\";\nimport Alert from \"react-native-web/dist/exports/Alert\";\nimport RefreshControl from \"react-native-web/dist/exports/RefreshControl\";\nimport { useFocusEffect } from '@react-navigation/native';\nimport { LineChart } from 'react-native-chart-kit';\nimport Dimensions from \"react-native-web/dist/exports/Dimensions\";\nimport { jsx as _jsx, jsxs as _jsxs } from \"react/jsx-runtime\";\nvar screenWidth = Dimensions.get('window').width - 40;\nexport default function DashboardScreen(_ref) {\n  var _data$historico, _data$historico2, _data$historico3;\n  var navigation = _ref.navigation;\n  var _useState = useState({\n      vendas_mes: 0,\n      total_produtos: 0,\n      lucro_mes: 0,\n      vendas_pendentes: 0,\n      historico: []\n    }),\n    _useState2 = _slicedToArray(_useState, 2),\n    data = _useState2[0],\n    setData = _useState2[1];\n  var _useState3 = useState(true),\n    _useState4 = _slicedToArray(_useState3, 2),\n    loading = _useState4[0],\n    setLoading = _useState4[1];\n  var _useState5 = useState(false),\n    _useState6 = _slicedToArray(_useState5, 2),\n    refreshing = _useState6[0],\n    setRefreshing = _useState6[1];\n  var loadDashboardData = function () {\n    var _ref2 = _asyncToGenerator(function* () {\n      var showLoading = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : true;\n      try {\n        if (showLoading) setLoading(true);\n        var response = yield fetch('http://localhost:3000/api/dashboard/summary');\n        if (!response.ok) throw new Error(\"HTTP \" + response.status + \": \" + response.statusText);\n        var result = yield response.json();\n        var historico = result.historico || [{\n          dia: '01',\n          total_vendas: 0,\n          lucro: 0\n        }, {\n          dia: '02',\n          total_vendas: 0,\n          lucro: 0\n        }, {\n          dia: '03',\n          total_vendas: 0,\n          lucro: 0\n        }];\n        setData({\n          vendas_mes: result.vendasMes || 0,\n          total_produtos: result.produtos || 0,\n          lucro_mes: result.lucroMes || 0,\n          vendas_pendentes: result.pendentes || 0,\n          historico: historico\n        });\n      } catch (error) {\n        console.error('Erro no dashboard:', error);\n        Alert.alert('Erro de Conexão', 'Não foi possível carregar os dados do dashboard.\\n' + error.message);\n        setData({\n          vendas_mes: 0,\n          total_produtos: 0,\n          lucro_mes: 0,\n          vendas_pendentes: 0,\n          historico: []\n        });\n      } finally {\n        setLoading(false);\n        setRefreshing(false);\n      }\n    });\n    return function loadDashboardData() {\n      return _ref2.apply(this, arguments);\n    };\n  }();\n  useFocusEffect(React.useCallback(function () {\n    loadDashboardData();\n  }, []));\n  var onRefresh = function onRefresh() {\n    setRefreshing(true);\n    loadDashboardData(false);\n  };\n  var formatCurrency = function formatCurrency(value) {\n    return new Intl.NumberFormat('pt-BR', {\n      style: 'currency',\n      currency: 'BRL'\n    }).format(value);\n  };\n  if (loading) {\n    return _jsxs(View, {\n      style: styles.loadingContainer,\n      children: [_jsx(ActivityIndicator, {\n        size: \"large\",\n        color: \"#2196F3\"\n      }), _jsx(Text, {\n        style: styles.loadingText,\n        children: \"Carregando dashboard...\"\n      })]\n    });\n  }\n  var chartLabels = ((_data$historico = data.historico) == null ? void 0 : _data$historico.map(function (h) {\n    return h.dia;\n  })) || [];\n  var chartVendas = ((_data$historico2 = data.historico) == null ? void 0 : _data$historico2.map(function (h) {\n    return h.total_vendas;\n  })) || [];\n  var chartLucro = ((_data$historico3 = data.historico) == null ? void 0 : _data$historico3.map(function (h) {\n    return h.lucro;\n  })) || [];\n  var chartData = {\n    labels: chartLabels,\n    datasets: [{\n      data: chartVendas,\n      color: function color() {\n        return '#2196F3';\n      },\n      strokeWidth: 2,\n      label: 'Vendas'\n    }, {\n      data: chartLucro,\n      color: function color() {\n        return '#4CAF50';\n      },\n      strokeWidth: 2,\n      label: 'Lucro'\n    }],\n    legend: ['Vendas', 'Lucro']\n  };\n  return _jsxs(ScrollView, {\n    style: styles.container,\n    refreshControl: _jsx(RefreshControl, {\n      refreshing: refreshing,\n      onRefresh: onRefresh\n    }),\n    children: [_jsxs(View, {\n      style: styles.header,\n      children: [_jsx(Text, {\n        style: styles.title,\n        children: \"GEV App\"\n      }), _jsx(Text, {\n        style: styles.subtitle,\n        children: \"Gest\\xE3o Empresarial de Vendas\"\n      })]\n    }), _jsxs(View, {\n      style: styles.cardsContainer,\n      children: [_jsxs(View, {\n        style: styles.row,\n        children: [_jsxs(View, {\n          style: [styles.card, styles.cardPrimary],\n          children: [_jsx(Text, {\n            style: styles.cardValue,\n            children: formatCurrency(data.vendas_mes)\n          }), _jsx(Text, {\n            style: styles.cardLabel,\n            children: \"Vendas do M\\xEAs\"\n          })]\n        }), _jsxs(View, {\n          style: [styles.card, styles.cardSuccess],\n          children: [_jsx(Text, {\n            style: styles.cardValue,\n            children: formatCurrency(data.lucro_mes)\n          }), _jsx(Text, {\n            style: styles.cardLabel,\n            children: \"Lucro do M\\xEAs\"\n          })]\n        })]\n      }), _jsxs(View, {\n        style: styles.row,\n        children: [_jsxs(View, {\n          style: [styles.card, styles.cardInfo],\n          children: [_jsx(Text, {\n            style: styles.cardValue,\n            children: data.total_produtos\n          }), _jsx(Text, {\n            style: styles.cardLabel,\n            children: \"Produtos Cadastrados\"\n          })]\n        }), _jsxs(View, {\n          style: [styles.card, styles.cardWarning],\n          children: [_jsx(Text, {\n            style: styles.cardValue,\n            children: data.vendas_pendentes\n          }), _jsx(Text, {\n            style: styles.cardLabel,\n            children: \"Vendas Pendentes\"\n          })]\n        })]\n      })]\n    }), _jsxs(View, {\n      style: styles.chartContainer,\n      children: [_jsx(Text, {\n        style: styles.chartTitle,\n        children: \"Hist\\xF3rico de Vendas x Lucro\"\n      }), _jsx(LineChart, {\n        data: chartData,\n        width: screenWidth,\n        height: 220,\n        chartConfig: {\n          backgroundColor: '#ffffff',\n          backgroundGradientFrom: '#f5f5f5',\n          backgroundGradientTo: '#f5f5f5',\n          decimalPlaces: 2,\n          color: function color() {\n            var opacity = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : 1;\n            return \"rgba(33, 150, 243, \" + opacity + \")\";\n          },\n          labelColor: function labelColor() {\n            return '#333';\n          },\n          propsForDots: {\n            r: '4',\n            strokeWidth: '2',\n            stroke: '#2196F3'\n          }\n        },\n        style: styles.chartStyle\n      })]\n    }), _jsxs(View, {\n      style: styles.menuContainer,\n      children: [_jsx(Text, {\n        style: styles.menuTitle,\n        children: \"Menu Principal\"\n      }), _jsxs(View, {\n        style: styles.menuGrid,\n        children: [_jsxs(TouchableOpacity, {\n          style: styles.menuItem,\n          onPress: function onPress() {\n            return navigation.navigate('Products');\n          },\n          children: [_jsx(Text, {\n            style: styles.menuIcon,\n            children: \"\\uD83D\\uDCE6\"\n          }), _jsx(Text, {\n            style: styles.menuText,\n            children: \"Produtos\"\n          }), _jsx(Text, {\n            style: styles.menuSubtext,\n            children: \"Gerenciar estoque\"\n          })]\n        }), _jsxs(TouchableOpacity, {\n          style: styles.menuItem,\n          onPress: function onPress() {\n            return navigation.navigate('NewSale');\n          },\n          children: [_jsx(Text, {\n            style: styles.menuIcon,\n            children: \"\\uD83D\\uDCB0\"\n          }), _jsx(Text, {\n            style: styles.menuText,\n            children: \"Nova Venda\"\n          }), _jsx(Text, {\n            style: styles.menuSubtext,\n            children: \"Registrar venda\"\n          })]\n        }), _jsxs(TouchableOpacity, {\n          style: styles.menuItem,\n          onPress: function onPress() {\n            return navigation.navigate('SalesHistory');\n          },\n          children: [_jsx(Text, {\n            style: styles.menuIcon,\n            children: \"\\uD83D\\uDCCA\"\n          }), _jsx(Text, {\n            style: styles.menuText,\n            children: \"Hist\\xF3rico\"\n          }), _jsx(Text, {\n            style: styles.menuSubtext,\n            children: \"Ver vendas\"\n          })]\n        }), _jsxs(TouchableOpacity, {\n          style: styles.menuItem,\n          onPress: function onPress() {\n            return navigation.navigate('Reports');\n          },\n          children: [_jsx(Text, {\n            style: styles.menuIcon,\n            children: \"\\uD83D\\uDCC8\"\n          }), _jsx(Text, {\n            style: styles.menuText,\n            children: \"Relat\\xF3rios\"\n          }), _jsx(Text, {\n            style: styles.menuSubtext,\n            children: \"An\\xE1lises\"\n          })]\n        })]\n      })]\n    }), _jsx(View, {\n      style: styles.footerRefresh,\n      children: _jsx(TouchableOpacity, {\n        style: styles.refreshButton,\n        onPress: function onPress() {\n          return loadDashboardData();\n        },\n        children: _jsx(Text, {\n          style: styles.refreshButtonText,\n          children: \"\\uD83D\\uDD04 Atualizar Informa\\xE7\\xF5es\"\n        })\n      })\n    })]\n  });\n}\nvar styles = StyleSheet.create({\n  container: {\n    flex: 1,\n    backgroundColor: '#f5f5f5'\n  },\n  loadingContainer: {\n    flex: 1,\n    justifyContent: 'center',\n    alignItems: 'center',\n    backgroundColor: '#f5f5f5'\n  },\n  loadingText: {\n    marginTop: 10,\n    color: '#666',\n    fontSize: 16\n  },\n  header: {\n    backgroundColor: '#2196F3',\n    paddingTop: 50,\n    paddingBottom: 30,\n    paddingHorizontal: 20,\n    alignItems: 'center'\n  },\n  title: {\n    fontSize: 28,\n    fontWeight: 'bold',\n    color: 'white',\n    marginBottom: 5\n  },\n  subtitle: {\n    fontSize: 16,\n    color: 'white',\n    opacity: 0.9\n  },\n  cardsContainer: {\n    padding: 20\n  },\n  row: {\n    flexDirection: 'row',\n    justifyContent: 'space-between',\n    marginBottom: 15\n  },\n  card: {\n    width: '48%',\n    padding: 20,\n    borderRadius: 12,\n    elevation: 3,\n    shadowColor: '#000',\n    shadowOffset: {\n      width: 0,\n      height: 2\n    },\n    shadowOpacity: 0.1,\n    shadowRadius: 4\n  },\n  cardPrimary: {\n    backgroundColor: '#2196F3'\n  },\n  cardSuccess: {\n    backgroundColor: '#4CAF50'\n  },\n  cardInfo: {\n    backgroundColor: '#FF9800'\n  },\n  cardWarning: {\n    backgroundColor: '#F44336'\n  },\n  cardValue: {\n    fontSize: 18,\n    fontWeight: 'bold',\n    color: 'white',\n    marginBottom: 5\n  },\n  cardLabel: {\n    fontSize: 12,\n    color: 'white',\n    opacity: 0.9\n  },\n  chartContainer: {\n    marginHorizontal: 20,\n    marginBottom: 20\n  },\n  chartTitle: {\n    fontSize: 16,\n    fontWeight: 'bold',\n    color: '#333',\n    marginBottom: 10\n  },\n  chartStyle: {\n    borderRadius: 12\n  },\n  menuContainer: {\n    paddingHorizontal: 20,\n    paddingBottom: 20\n  },\n  menuTitle: {\n    fontSize: 20,\n    fontWeight: 'bold',\n    color: '#333',\n    marginBottom: 20\n  },\n  menuGrid: {\n    flexDirection: 'row',\n    flexWrap: 'wrap',\n    justifyContent: 'space-between'\n  },\n  menuItem: {\n    width: '48%',\n    backgroundColor: 'white',\n    padding: 20,\n    borderRadius: 12,\n    alignItems: 'center',\n    marginBottom: 15,\n    elevation: 2,\n    shadowColor: '#000',\n    shadowOffset: {\n      width: 0,\n      height: 1\n    },\n    shadowOpacity: 0.1,\n    shadowRadius: 2\n  },\n  menuIcon: {\n    fontSize: 32,\n    marginBottom: 10\n  },\n  menuText: {\n    fontSize: 16,\n    fontWeight: '600',\n    color: '#333',\n    marginBottom: 5\n  },\n  menuSubtext: {\n    fontSize: 12,\n    color: '#666',\n    textAlign: 'center'\n  },\n  footerRefresh: {\n    marginVertical: 20,\n    alignItems: 'center'\n  },\n  refreshButton: {\n    width: '90%',\n    height: 50,\n    backgroundColor: '#2196F3',\n    borderRadius: 12,\n    justifyContent: 'center',\n    alignItems: 'center',\n    elevation: 3\n  },\n  refreshButtonText: {\n    color: '#fff',\n    fontSize: 16,\n    fontWeight: 'bold'\n  }\n});","map":{"version":3,"names":["React","useState","View","Text","StyleSheet","ScrollView","TouchableOpacity","ActivityIndicator","Alert","RefreshControl","useFocusEffect","LineChart","Dimensions","jsx","_jsx","jsxs","_jsxs","screenWidth","get","width","DashboardScreen","_ref","_data$historico","_data$historico2","_data$historico3","navigation","_useState","vendas_mes","total_produtos","lucro_mes","vendas_pendentes","historico","_useState2","_slicedToArray","data","setData","_useState3","_useState4","loading","setLoading","_useState5","_useState6","refreshing","setRefreshing","loadDashboardData","_ref2","_asyncToGenerator","showLoading","arguments","length","undefined","response","fetch","ok","Error","status","statusText","result","json","dia","total_vendas","lucro","vendasMes","produtos","lucroMes","pendentes","error","console","alert","message","apply","useCallback","onRefresh","formatCurrency","value","Intl","NumberFormat","style","currency","format","styles","loadingContainer","children","size","color","loadingText","chartLabels","map","h","chartVendas","chartLucro","chartData","labels","datasets","strokeWidth","label","legend","container","refreshControl","header","title","subtitle","cardsContainer","row","card","cardPrimary","cardValue","cardLabel","cardSuccess","cardInfo","cardWarning","chartContainer","chartTitle","height","chartConfig","backgroundColor","backgroundGradientFrom","backgroundGradientTo","decimalPlaces","opacity","labelColor","propsForDots","r","stroke","chartStyle","menuContainer","menuTitle","menuGrid","menuItem","onPress","navigate","menuIcon","menuText","menuSubtext","footerRefresh","refreshButton","refreshButtonText","create","flex","justifyContent","alignItems","marginTop","fontSize","paddingTop","paddingBottom","paddingHorizontal","fontWeight","marginBottom","padding","flexDirection","borderRadius","elevation","shadowColor","shadowOffset","shadowOpacity","shadowRadius","marginHorizontal","flexWrap","textAlign","marginVertical"],"sources":["C:/Users/User/GEVapp/frontend/app/screens/DashboardScreen.tsx"],"sourcesContent":["import React, { useState, useEffect } from 'react';\r\nimport {\r\n  View,\r\n  Text,\r\n  StyleSheet,\r\n  ScrollView,\r\n  TouchableOpacity,\r\n  ActivityIndicator,\r\n  Alert,\r\n  RefreshControl,\r\n} from 'react-native';\r\nimport { useFocusEffect } from '@react-navigation/native';\r\nimport { LineChart } from 'react-native-chart-kit';\r\nimport { Dimensions } from 'react-native';\r\n\r\ninterface DashboardData {\r\n  vendas_mes: number;\r\n  total_produtos: number;\r\n  lucro_mes: number;\r\n  vendas_pendentes: number;\r\n  historico?: { dia: string; total_vendas: number; lucro: number }[];\r\n}\r\n\r\nconst screenWidth = Dimensions.get('window').width - 40; // padding horizontal do scroll\r\n\r\nexport default function DashboardScreen({ navigation }: any) {\r\n  const [data, setData] = useState<DashboardData>({\r\n    vendas_mes: 0,\r\n    total_produtos: 0,\r\n    lucro_mes: 0,\r\n    vendas_pendentes: 0,\r\n    historico: [],\r\n  });\r\n  const [loading, setLoading] = useState(true);\r\n  const [refreshing, setRefreshing] = useState(false);\r\n\r\n  const loadDashboardData = async (showLoading = true) => {\r\n    try {\r\n      if (showLoading) setLoading(true);\r\n\r\n      const response = await fetch('http://localhost:3000/api/dashboard/summary');\r\n      if (!response.ok) throw new Error(`HTTP ${response.status}: ${response.statusText}`);\r\n\r\n      const result = await response.json();\r\n\r\n      // Ajuste dos dados do histórico, simulando backend retornando array de dias\r\n      const historico = result.historico || [\r\n        { dia: '01', total_vendas: 0, lucro: 0 },\r\n        { dia: '02', total_vendas: 0, lucro: 0 },\r\n        { dia: '03', total_vendas: 0, lucro: 0 },\r\n      ];\r\n\r\n      setData({\r\n        vendas_mes: result.vendasMes || 0,\r\n        total_produtos: result.produtos || 0,\r\n        lucro_mes: result.lucroMes || 0,\r\n        vendas_pendentes: result.pendentes || 0,\r\n        historico,\r\n      });\r\n    } catch (error: any) {\r\n      console.error('Erro no dashboard:', error);\r\n      Alert.alert(\r\n        'Erro de Conexão',\r\n        'Não foi possível carregar os dados do dashboard.\\n' + error.message\r\n      );\r\n      setData({\r\n        vendas_mes: 0,\r\n        total_produtos: 0,\r\n        lucro_mes: 0,\r\n        vendas_pendentes: 0,\r\n        historico: [],\r\n      });\r\n    } finally {\r\n      setLoading(false);\r\n      setRefreshing(false);\r\n    }\r\n  };\r\n\r\n  useFocusEffect(\r\n    React.useCallback(() => {\r\n      loadDashboardData();\r\n    }, [])\r\n  );\r\n\r\n  const onRefresh = () => {\r\n    setRefreshing(true);\r\n    loadDashboardData(false);\r\n  };\r\n\r\n  const formatCurrency = (value: number) =>\r\n    new Intl.NumberFormat('pt-BR', { style: 'currency', currency: 'BRL' }).format(value);\r\n\r\n  if (loading) {\r\n    return (\r\n      <View style={styles.loadingContainer}>\r\n        <ActivityIndicator size=\"large\" color=\"#2196F3\" />\r\n        <Text style={styles.loadingText}>Carregando dashboard...</Text>\r\n      </View>\r\n    );\r\n  }\r\n\r\n  // Preparando dados para gráfico\r\n  const chartLabels = data.historico?.map((h) => h.dia) || [];\r\n  const chartVendas = data.historico?.map((h) => h.total_vendas) || [];\r\n  const chartLucro = data.historico?.map((h) => h.lucro) || [];\r\n\r\n  const chartData = {\r\n    labels: chartLabels,\r\n    datasets: [\r\n      { data: chartVendas, color: () => '#2196F3', strokeWidth: 2, label: 'Vendas' },\r\n      { data: chartLucro, color: () => '#4CAF50', strokeWidth: 2, label: 'Lucro' },\r\n    ],\r\n    legend: ['Vendas', 'Lucro'],\r\n  };\r\n\r\n  return (\r\n    <ScrollView\r\n      style={styles.container}\r\n      refreshControl={<RefreshControl refreshing={refreshing} onRefresh={onRefresh} />}\r\n    >\r\n      {/* Header */}\r\n      <View style={styles.header}>\r\n        <Text style={styles.title}>GEV App</Text>\r\n        <Text style={styles.subtitle}>Gestão Empresarial de Vendas</Text>\r\n      </View>\r\n\r\n      {/* Cards */}\r\n      <View style={styles.cardsContainer}>\r\n        <View style={styles.row}>\r\n          <View style={[styles.card, styles.cardPrimary]}>\r\n            <Text style={styles.cardValue}>{formatCurrency(data.vendas_mes)}</Text>\r\n            <Text style={styles.cardLabel}>Vendas do Mês</Text>\r\n          </View>\r\n          <View style={[styles.card, styles.cardSuccess]}>\r\n            <Text style={styles.cardValue}>{formatCurrency(data.lucro_mes)}</Text>\r\n            <Text style={styles.cardLabel}>Lucro do Mês</Text>\r\n          </View>\r\n        </View>\r\n        <View style={styles.row}>\r\n          <View style={[styles.card, styles.cardInfo]}>\r\n            <Text style={styles.cardValue}>{data.total_produtos}</Text>\r\n            <Text style={styles.cardLabel}>Produtos Cadastrados</Text>\r\n          </View>\r\n          <View style={[styles.card, styles.cardWarning]}>\r\n            <Text style={styles.cardValue}>{data.vendas_pendentes}</Text>\r\n            <Text style={styles.cardLabel}>Vendas Pendentes</Text>\r\n          </View>\r\n        </View>\r\n      </View>\r\n\r\n      {/* Gráfico Vendas x Lucro */}\r\n      <View style={styles.chartContainer}>\r\n        <Text style={styles.chartTitle}>Histórico de Vendas x Lucro</Text>\r\n        <LineChart\r\n          data={chartData}\r\n          width={screenWidth}\r\n          height={220}\r\n          chartConfig={{\r\n            backgroundColor: '#ffffff',\r\n            backgroundGradientFrom: '#f5f5f5',\r\n            backgroundGradientTo: '#f5f5f5',\r\n            decimalPlaces: 2,\r\n            color: (opacity = 1) => `rgba(33, 150, 243, ${opacity})`,\r\n            labelColor: () => '#333',\r\n            propsForDots: { r: '4', strokeWidth: '2', stroke: '#2196F3' },\r\n          }}\r\n          style={styles.chartStyle}\r\n        />\r\n      </View>\r\n\r\n      {/* Menu */}\r\n      <View style={styles.menuContainer}>\r\n        <Text style={styles.menuTitle}>Menu Principal</Text>\r\n        <View style={styles.menuGrid}>\r\n          <TouchableOpacity style={styles.menuItem} onPress={() => navigation.navigate('Products')}>\r\n            <Text style={styles.menuIcon}>📦</Text>\r\n            <Text style={styles.menuText}>Produtos</Text>\r\n            <Text style={styles.menuSubtext}>Gerenciar estoque</Text>\r\n          </TouchableOpacity>\r\n\r\n          <TouchableOpacity style={styles.menuItem} onPress={() => navigation.navigate('NewSale')}>\r\n            <Text style={styles.menuIcon}>💰</Text>\r\n            <Text style={styles.menuText}>Nova Venda</Text>\r\n            <Text style={styles.menuSubtext}>Registrar venda</Text>\r\n          </TouchableOpacity>\r\n\r\n          <TouchableOpacity style={styles.menuItem} onPress={() => navigation.navigate('SalesHistory')}>\r\n            <Text style={styles.menuIcon}>📊</Text>\r\n            <Text style={styles.menuText}>Histórico</Text>\r\n            <Text style={styles.menuSubtext}>Ver vendas</Text>\r\n          </TouchableOpacity>\r\n\r\n          <TouchableOpacity style={styles.menuItem} onPress={() => navigation.navigate('Reports')}>\r\n            <Text style={styles.menuIcon}>📈</Text>\r\n            <Text style={styles.menuText}>Relatórios</Text>\r\n            <Text style={styles.menuSubtext}>Análises</Text>\r\n          </TouchableOpacity>\r\n        </View>\r\n      </View>\r\n\r\n      {/* Botão Atualizar Informações */}\r\n      <View style={styles.footerRefresh}>\r\n        <TouchableOpacity style={styles.refreshButton} onPress={() => loadDashboardData()}>\r\n          <Text style={styles.refreshButtonText}>🔄 Atualizar Informações</Text>\r\n        </TouchableOpacity>\r\n      </View>\r\n    </ScrollView>\r\n  );\r\n}\r\n\r\nconst styles = StyleSheet.create({\r\n  container: { flex: 1, backgroundColor: '#f5f5f5' },\r\n  loadingContainer: { flex: 1, justifyContent: 'center', alignItems: 'center', backgroundColor: '#f5f5f5' },\r\n  loadingText: { marginTop: 10, color: '#666', fontSize: 16 },\r\n  header: { backgroundColor: '#2196F3', paddingTop: 50, paddingBottom: 30, paddingHorizontal: 20, alignItems: 'center' },\r\n  title: { fontSize: 28, fontWeight: 'bold', color: 'white', marginBottom: 5 },\r\n  subtitle: { fontSize: 16, color: 'white', opacity: 0.9 },\r\n  cardsContainer: { padding: 20 },\r\n  row: { flexDirection: 'row', justifyContent: 'space-between', marginBottom: 15 },\r\n  card: { width: '48%', padding: 20, borderRadius: 12, elevation: 3, shadowColor: '#000', shadowOffset: { width: 0, height: 2 }, shadowOpacity: 0.1, shadowRadius: 4 },\r\n  cardPrimary: { backgroundColor: '#2196F3' },\r\n  cardSuccess: { backgroundColor: '#4CAF50' },\r\n  cardInfo: { backgroundColor: '#FF9800' },\r\n  cardWarning: { backgroundColor: '#F44336' },\r\n  cardValue: { fontSize: 18, fontWeight: 'bold', color: 'white', marginBottom: 5 },\r\n  cardLabel: { fontSize: 12, color: 'white', opacity: 0.9 },\r\n  chartContainer: { marginHorizontal: 20, marginBottom: 20 },\r\n  chartTitle: { fontSize: 16, fontWeight: 'bold', color: '#333', marginBottom: 10 },\r\n  chartStyle: { borderRadius: 12 },\r\n  menuContainer: { paddingHorizontal: 20, paddingBottom: 20 },\r\n  menuTitle: { fontSize: 20, fontWeight: 'bold', color: '#333', marginBottom: 20 },\r\n  menuGrid: { flexDirection: 'row', flexWrap: 'wrap', justifyContent: 'space-between' },\r\n  menuItem: { width: '48%', backgroundColor: 'white', padding: 20, borderRadius: 12, alignItems: 'center', marginBottom: 15, elevation: 2, shadowColor: '#000', shadowOffset: { width: 0, height: 1 }, shadowOpacity: 0.1, shadowRadius: 2 },\r\n  menuIcon: { fontSize: 32, marginBottom: 10 },\r\n  menuText: { fontSize: 16, fontWeight: '600', color: '#333', marginBottom: 5 },\r\n  menuSubtext: { fontSize: 12, color: '#666', textAlign: 'center' },\r\n  footerRefresh: { marginVertical: 20, alignItems: 'center' },\r\n  refreshButton: { width: '90%', height: 50, backgroundColor: '#2196F3', borderRadius: 12, justifyContent: 'center', alignItems: 'center', elevation: 3 },\r\n  refreshButtonText: { color: '#fff', fontSize: 16, fontWeight: 'bold' },\r\n});\r\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}