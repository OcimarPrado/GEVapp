{"ast":null,"code":"import _slicedToArray from \"@babel/runtime/helpers/slicedToArray\";\nimport { useEffect, useState } from \"react\";\nimport View from \"react-native-web/dist/exports/View\";\nimport FlatList from \"react-native-web/dist/exports/FlatList\";\nimport ActivityIndicator from \"react-native-web/dist/exports/ActivityIndicator\";\nimport Alert from \"react-native-web/dist/exports/Alert\";\nimport { getVendas } from \"../api\";\nimport SaleItem from \"../components/SaleItem\";\nimport { jsx as _jsx } from \"react/jsx-runtime\";\nexport default function SalesHistoryScreen() {\n  var _useState = useState([]),\n    _useState2 = _slicedToArray(_useState, 2),\n    vendas = _useState2[0],\n    setVendas = _useState2[1];\n  var _useState3 = useState(true),\n    _useState4 = _slicedToArray(_useState3, 2),\n    loading = _useState4[0],\n    setLoading = _useState4[1];\n  useEffect(function () {\n    getVendas().then(function (res) {\n      return setVendas(res.data.data);\n    }).catch(function () {\n      return Alert.alert(\"Erro\", \"Não foi possível carregar as vendas\");\n    }).finally(function () {\n      return setLoading(false);\n    });\n  }, []);\n  if (loading) return _jsx(ActivityIndicator, {\n    size: \"large\",\n    style: {\n      flex: 1\n    }\n  });\n  return _jsx(View, {\n    style: {\n      flex: 1\n    },\n    children: _jsx(FlatList, {\n      data: vendas,\n      keyExtractor: function keyExtractor(item) {\n        return item.id.toString();\n      },\n      renderItem: function renderItem(_ref) {\n        var item = _ref.item;\n        return _jsx(SaleItem, {\n          sale: item\n        });\n      }\n    })\n  });\n}","map":{"version":3,"names":["useEffect","useState","View","FlatList","ActivityIndicator","Alert","getVendas","SaleItem","jsx","_jsx","SalesHistoryScreen","_useState","_useState2","_slicedToArray","vendas","setVendas","_useState3","_useState4","loading","setLoading","then","res","data","catch","alert","finally","size","style","flex","children","keyExtractor","item","id","toString","renderItem","_ref","sale"],"sources":["C:/Users/User/GEVapp/frontend/app/screens/SalesHistoryScreen.tsx"],"sourcesContent":["import { useEffect, useState } from \"react\";\r\nimport { View, FlatList, ActivityIndicator, Alert } from \"react-native\";\r\nimport { getVendas } from \"../api\";\r\nimport SaleItem from \"../components/SaleItem\";\r\n\r\nexport default function SalesHistoryScreen() {\r\n  const [vendas, setVendas] = useState<any[]>([]);\r\n  const [loading, setLoading] = useState(true);\r\n\r\n  useEffect(() => {\r\n    getVendas()\r\n      .then((res) => setVendas(res.data.data))\r\n      .catch(() => Alert.alert(\"Erro\", \"Não foi possível carregar as vendas\"))\r\n      .finally(() => setLoading(false));\r\n  }, []);\r\n\r\n  if (loading) return <ActivityIndicator size=\"large\" style={{ flex: 1 }} />;\r\n\r\n  return (\r\n    <View style={{ flex: 1 }}>\r\n      <FlatList\r\n        data={vendas}\r\n        keyExtractor={(item) => item.id.toString()}\r\n        renderItem={({ item }) => <SaleItem sale={item} />}\r\n      />\r\n    </View>\r\n  );\r\n}\r\n"],"mappings":";AAAA,SAASA,SAAS,EAAEC,QAAQ,QAAQ,OAAO;AAAC,OAAAC,IAAA;AAAA,OAAAC,QAAA;AAAA,OAAAC,iBAAA;AAAA,OAAAC,KAAA;AAE5C,SAASC,SAAS;AAClB,OAAOC,QAAQ;AAA+B,SAAAC,GAAA,IAAAC,IAAA;AAE9C,eAAe,SAASC,kBAAkBA,CAAA,EAAG;EAC3C,IAAAC,SAAA,GAA4BV,QAAQ,CAAQ,EAAE,CAAC;IAAAW,UAAA,GAAAC,cAAA,CAAAF,SAAA;IAAxCG,MAAM,GAAAF,UAAA;IAAEG,SAAS,GAAAH,UAAA;EACxB,IAAAI,UAAA,GAA8Bf,QAAQ,CAAC,IAAI,CAAC;IAAAgB,UAAA,GAAAJ,cAAA,CAAAG,UAAA;IAArCE,OAAO,GAAAD,UAAA;IAAEE,UAAU,GAAAF,UAAA;EAE1BjB,SAAS,CAAC,YAAM;IACdM,SAAS,CAAC,CAAC,CACRc,IAAI,CAAC,UAACC,GAAG;MAAA,OAAKN,SAAS,CAACM,GAAG,CAACC,IAAI,CAACA,IAAI,CAAC;IAAA,EAAC,CACvCC,KAAK,CAAC;MAAA,OAAMlB,KAAK,CAACmB,KAAK,CAAC,MAAM,EAAE,qCAAqC,CAAC;IAAA,EAAC,CACvEC,OAAO,CAAC;MAAA,OAAMN,UAAU,CAAC,KAAK,CAAC;IAAA,EAAC;EACrC,CAAC,EAAE,EAAE,CAAC;EAEN,IAAID,OAAO,EAAE,OAAOT,IAAA,CAACL,iBAAiB;IAACsB,IAAI,EAAC,OAAO;IAACC,KAAK,EAAE;MAAEC,IAAI,EAAE;IAAE;EAAE,CAAE,CAAC;EAE1E,OACEnB,IAAA,CAACP,IAAI;IAACyB,KAAK,EAAE;MAAEC,IAAI,EAAE;IAAE,CAAE;IAAAC,QAAA,EACvBpB,IAAA,CAACN,QAAQ;MACPmB,IAAI,EAAER,MAAO;MACbgB,YAAY,EAAE,SAAdA,YAAYA,CAAGC,IAAI;QAAA,OAAKA,IAAI,CAACC,EAAE,CAACC,QAAQ,CAAC,CAAC;MAAA,CAAC;MAC3CC,UAAU,EAAE,SAAZA,UAAUA,CAAAC,IAAA;QAAA,IAAKJ,IAAI,GAAAI,IAAA,CAAJJ,IAAI;QAAA,OAAOtB,IAAA,CAACF,QAAQ;UAAC6B,IAAI,EAAEL;QAAK,CAAE,CAAC;MAAA;IAAC,CACpD;EAAC,CACE,CAAC;AAEX","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}